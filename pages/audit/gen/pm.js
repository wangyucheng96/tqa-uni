    const pm_my_work = {
        columns: [
            {dataIndex: 'myWorkCode'},
            {dataIndex: 'date'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'myWorkContent'},
            {dataIndex: 'isFinished', enum: 'yes_no'},
        ],
    }
    const pm_basic_entpr_base_info = {
        columns: [
            {dataIndex: 'entprName'},
            {dataIndex: 'entprNo'},
            {dataIndex: 'uscCode'},
            {dataIndex: 'compName'},
            {dataIndex: 'province'},
            {dataIndex: 'city'},
            {dataIndex: 'county'},
            {dataIndex: 'subdistrict'},
            {dataIndex: 'park'},
            {dataIndex: 'postcode'},
            {dataIndex: 'regAddr'},
            {dataIndex: 'bizAddr'},
            {dataIndex: 'longitude'},
            {dataIndex: 'latitude'},
            {dataIndex: 'setupDate'},
            {dataIndex: 'legalPerson'},
            {dataIndex: 'contactTel'},
            {dataIndex: 'safetyDutyTel'},
            {dataIndex: 'contactEmail'},
            {dataIndex: 'contactQq'},
            {dataIndex: 'website'},
            {dataIndex: 'fax'},
            {dataIndex: 'boss'},
            {dataIndex: 'bossTel'},
            {dataIndex: 'bossMobile'},
            {dataIndex: 'bossEmail'},
            {dataIndex: 'safetyManager'},
            {dataIndex: 'safetyManagerTel'},
            {dataIndex: 'safetyManagerMobile'},
            {dataIndex: 'safetyManagerEmail'},
            {dataIndex: 'ecoTypeLarge'},
            {dataIndex: 'ecoTypeSmall'},
            {dataIndex: 'indusTypeClass'},
            {dataIndex: 'indusTypeLagre'},
            {dataIndex: 'indusTypeMiddle'},
            {dataIndex: 'indusTypeSmall'},
            {dataIndex: 'supervisionLarge'},
            {dataIndex: 'supervisionSmall'},
            {dataIndex: 'specialGovernance'},
            {dataIndex: 'stateOwed', enum: 'yes_no'},
            {dataIndex: 'affiliation'},
            {dataIndex: 'businessScope'},
            {dataIndex: 'operatingStatus', enum: 'operating_status'},
            {dataIndex: 'regCapi'},
            {dataIndex: 'specialOperationNum'},
            {dataIndex: 'fullSafetyNum'},
            {dataIndex: 'partSafetyNum'},
            {dataIndex: 'fullEmegNum'},
            {dataIndex: 'cseNum'},
            {dataIndex: 'safetyDepart', enum: 'yes_no'},
            {dataIndex: 'safetyDepartName'},
            {dataIndex: 'safetyDepartDuty'},
            {dataIndex: 'safetyDepartNum'},
            {dataIndex: 'fullSafety', enum: 'yes_no'},
            {dataIndex: 'floorArea'},
            {dataIndex: 'employeeNum'},
            {dataIndex: 'scale', enum: 'scale'},
            {dataIndex: 'entprScale', enum: 'entpr_scale'},
            {dataIndex: 'isParentComp', enum: 'yes_no'},
            {dataIndex: 'parentCompName'},
            {dataIndex: 'standLevel', enum: 'stand_level'},
            {dataIndex: 'certificationStartDate'},
            {dataIndex: 'certificationEndDate'},
            {dataIndex: 'safetySupervisionLevel', enum: 'safety_supervision_level'},
            {dataIndex: 'majorHazardInstallations', enum: 'yes_no'},
            {dataIndex: 'majorHazardMaxLevel'},
            {dataIndex: 'entprPlaneGragh', link: 'pic'},
            {dataIndex: 'businessLicensePic', link: 'pic'},
            {dataIndex: 'entprPic', link: 'pic'},
            {dataIndex: 'produceLicense'},
            {dataIndex: 'majorHazardSummary'},
            {dataIndex: 'chemUseSummary'},
            {dataIndex: 'chemProduceSummary'},
            {dataIndex: 'monitorChemUseSummary'},
            {dataIndex: 'hazardRoutingSummary'},
            {dataIndex: 'monitorChemSummary'},
            {dataIndex: 'boomChemSummary'},
        ],
    }
    const pm_basic_job = {
        columns: [
            {dataIndex: 'jobTitleCode'},
            {dataIndex: 'jobTitle'},
            {dataIndex: 'jobDesc'},
            {dataIndex: 'jobDescFile', link: 'txt'},
        ],
    }
    const pm_basic_certification_company = {
        columns: [
            {dataIndex: 'certiName'},
            {dataIndex: 'issueOrg'},
            {dataIndex: 'certiCode'},
            {dataIndex: 'releaseDate'},
            {dataIndex: 'validateDate'},
            {dataIndex: 'recheckDate'},
            {dataIndex: 'recheckPeriod'},
            {dataIndex: 'nextRecheckDate'},
            {dataIndex: 'certiStatus', enum: 'certi_status'},
            {dataIndex: 'certiDesc'},
            {dataIndex: 'certScan', link: 'txt'},
            {dataIndex: 'certMaterial', link: 'txt'},
        ],
    }
    const pm_basic_emplyee = {
        columns: [
            {dataIndex: 'employeeName'},
            {dataIndex: 'employeeNo'},
            {dataIndex: 'gender', enum: 'gender'},
            {dataIndex: 'registrationPlace'},
            {dataIndex: 'nation'},
            {dataIndex: 'department'},
            {dataIndex: 'jobTitle'},
            {dataIndex: 'groupName'},
            {dataIndex: 'mobile'},
            {dataIndex: 'relativeType', enum: 'relative_type'},
            {dataIndex: 'photo', link: 'pic'},
            {dataIndex: 'birthDate'},
            {dataIndex: 'idType', enum: 'credit_type'},
            {dataIndex: 'idNo'},
            {dataIndex: 'highestDiploma'},
            {dataIndex: 'lastGradCollege'},
            {dataIndex: 'major'},
            {dataIndex: 'partyStatus'},
            {dataIndex: 'healthCondition'},
            {dataIndex: 'postDuty'},
            {dataIndex: 'postTitle'},
            {dataIndex: 'jobLeader', enum: 'yes_no'},
            {dataIndex: 'workTitle'},
            {dataIndex: 'isSafetyManage', enum: 'yes_no'},
            {dataIndex: 'responserEnterDate'},
            {dataIndex: 'startWorkDate'},
            {dataIndex: 'workAge'},
            {dataIndex: 'experience'},
            {dataIndex: 'onBoard', enum: 'on_board'},
            {dataIndex: 'isSystemUser', enum: 'yes_no'},
            {dataIndex: 'officeTel'},
            {dataIndex: 'email'},
            {dataIndex: 'emgContactName'},
            {dataIndex: 'emgContactTel'},
        ],
        childTables: [
            'pm_basic_certification_employee',
            'pm_basic_emplyee_transfer',
        ]
    }
    const pm_basic_certification_employee = {
        columns: [
            {dataIndex: 'employeeName'},
            {dataIndex: 'certiName'},
            {dataIndex: 'certiCode'},
            {dataIndex: 'issueOrg'},
            {dataIndex: 'validateBeginDate'},
            {dataIndex: 'validateEndDate'},
            {dataIndex: 'recheckDate'},
            {dataIndex: 'recheckPeriod'},
            {dataIndex: 'nextRecheckDate'},
            {dataIndex: 'workSafetyRole', enum: 'work_safety_role'},
            {dataIndex: 'certiAttach', link: 'txt'},
            {dataIndex: 'certiDesc'},
            {dataIndex: 'isApplicable', enum: 'yes_no'},
        ],
    }
    const pm_basic_emplyee_transfer = {
        columns: [
            {dataIndex: 'employeeName'},
            {dataIndex: 'changePositionDate'},
            {dataIndex: 'previousDepartment'},
            {dataIndex: 'previousJob'},
            {dataIndex: 'latterDepartment'},
            {dataIndex: 'latterPosition'},
        ],
    }
    const pm_performance_report = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'performancePerson'},
            {dataIndex: 'performanceReport'},
            {dataIndex: 'performanceReportAttach', link: 'txt'},
            {dataIndex: 'registerRecordTime'},
            {dataIndex: 'registerRecordAttach', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_basic_produce_unit_area = {
        columns: [
            {dataIndex: 'unitAreaName'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'majorHazardCode'},
            {dataIndex: 'unitAreaType', enum: 'unit_area_type'},
            {dataIndex: 'safetyManager'},
            {dataIndex: 'contactMethod'},
            {dataIndex: 'tankArea'},
            {dataIndex: 'protectArea'},
            {dataIndex: 'haveProtect', enum: 'yes_no'},
            {dataIndex: 'tankCount'},
            {dataIndex: 'minTankDist'},
            {dataIndex: 'routingBrief'},
            {dataIndex: 'safetyAction'},
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
        ],
    }
    const pm_basic_device_container = {
        columns: [
            {dataIndex: 'containerPos'},
            {dataIndex: 'containerName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'containerLocation'},
            {dataIndex: 'keyDeviceContainer', enum: 'yes_no'},
            {dataIndex: 'belongRouting'},
            {dataIndex: 'isHazardRouting', enum: 'yes_no'},
            {dataIndex: 'majorChemicals'},
            {dataIndex: 'environment'},
            {dataIndex: 'containerFunction'},
            {dataIndex: 'autoControlMode'},
            {dataIndex: 'useStartDate'},
            {dataIndex: 'sitePic', link: 'pic'},
            {dataIndex: 'videoName'},
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'majorHazardCode'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_basic_area_tank = {
        columns: [
            {dataIndex: 'tankAreaCode'},
            {dataIndex: 'tankAreaName'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'majorHazardCode'},
            {dataIndex: 'areaName'},
            {dataIndex: 'locFactory'},
            {dataIndex: 'envFunctionArea'},
            {dataIndex: 'tankAreaArea'},
            {dataIndex: 'cofferdam', enum: 'have_not'},
            {dataIndex: 'cofferdamArea'},
            {dataIndex: 'tankNum'},
            {dataIndex: 'storageMaterial'},
            {dataIndex: 'totalVolume'},
            {dataIndex: 'conventionalStorage'},
            {dataIndex: 'twoTanksMinispace'},
            {dataIndex: 'firePassage', enum: 'have_not'},
            {dataIndex: 'loadMode'},
            {dataIndex: 'unloadChemType'},
            {dataIndex: 'sitePic', link: 'pic'},
            {dataIndex: 'notes'},
        ],
        childTables: [
            'pm_device_tank',
        ]
    }
    const pm_device_tank = {
        columns: [
            {dataIndex: 'tankCode'},
            {dataIndex: 'tankName'},
            {dataIndex: 'tankAreaName'},
            {dataIndex: 'tankVolume'},
            {dataIndex: 'tankForm', enum: 'tank_form'},
            {dataIndex: 'tankStructure', enum: 'tank_structure'},
            {dataIndex: 'tankLocation', enum: 'tank_location'},
            {dataIndex: 'sitePic', link: 'pic'},
            {dataIndex: 'useStartDate'},
            {dataIndex: 'storageMaterial'},
            {dataIndex: 'materialState'},
            {dataIndex: 'materialCategory'},
            {dataIndex: 'maxStorage'},
            {dataIndex: 'designPressure'},
            {dataIndex: 'pressureUpper'},
            {dataIndex: 'tempUpper'},
            {dataIndex: 'operatPressure'},
            {dataIndex: 'operatTemp'},
            {dataIndex: 'tempRange'},
            {dataIndex: 'levelHeight'},
            {dataIndex: 'wayInOut'},
            {dataIndex: 'cofferdam', enum: 'have_not'},
            {dataIndex: 'cofferdamArea'},
            {dataIndex: 'mapShow', enum: 'yes_no'},
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'majorHazardCode'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_basic_area_warehouse = {
        columns: [
            {dataIndex: 'reservoirCode'},
            {dataIndex: 'reservoirName'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'majorHazardCode'},
            {dataIndex: 'areaName'},
            {dataIndex: 'locFactory'},
            {dataIndex: 'envFunctionArea'},
            {dataIndex: 'reservoirArea'},
            {dataIndex: 'reservoirNum'},
            {dataIndex: 'minDistanceWarehouse'},
            {dataIndex: 'mapShow', enum: 'yes_no'},
            {dataIndex: 'sitePic', link: 'pic'},
            {dataIndex: 'notes'},
        ],
        childTables: [
            'pm_basic_warehouse',
        ]
    }
    const pm_basic_warehouse = {
        columns: [
            {dataIndex: 'warehouseCode'},
            {dataIndex: 'warehouseName'},
            {dataIndex: 'reservoirName'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'majorHazardCode'},
            {dataIndex: 'warehouseNo'},
            {dataIndex: 'warehouseArea'},
            {dataIndex: 'firewall', enum: 'have_not'},
            {dataIndex: 'warehouseForm', enum: 'warehouse_form'},
            {dataIndex: 'fireType'},
            {dataIndex: 'storageMaterial'},
            {dataIndex: 'maxStorage'},
            {dataIndex: 'goodsState'},
            {dataIndex: 'materialCategory'},
            {dataIndex: 'useStartDate'},
            {dataIndex: 'mapShow', enum: 'yes_no'},
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
            {dataIndex: 'sitePic', link: 'pic'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_basic_material_raw = {
        columns: [
            {dataIndex: 'rawMaterialCode'},
            {dataIndex: 'productName'},
            {dataIndex: 'casNo'},
            {dataIndex: 'isHazardChem', enum: 'yes_no'},
            {dataIndex: 'dangerChemCataSn'},
            {dataIndex: 'dangerChemCatalog'},
            {dataIndex: 'materialForm', enum: 'material_form'},
            {dataIndex: 'annualConsumption'},
            {dataIndex: 'maxInvLevel'},
            {dataIndex: 'actualReserves'},
            {dataIndex: 'reservesLocation'},
            {dataIndex: 'reservesDevice'},
            {dataIndex: 'reservesDeviceCode'},
            {dataIndex: 'storeType'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'processFlow'},
            {dataIndex: 'highlyToxicChem', enum: 'yes_no'},
            {dataIndex: 'keyHazardChem', enum: 'yes_no'},
            {dataIndex: 'specialHazardChem', enum: 'yes_no'},
            {dataIndex: 'safetyMeasures'},
            {dataIndex: 'emergencyMeasures'},
            {dataIndex: 'easyMakePoison', enum: 'yes_no'},
            {dataIndex: 'easyMakeExplode', enum: 'yes_no'},
            {dataIndex: 'isKeySupervisionProcess', enum: 'yes_no'},
        ],
    }
    const pm_basic_material_component = {
        columns: [
            {dataIndex: 'compMaterialCode'},
            {dataIndex: 'productName'},
            {dataIndex: 'casNo'},
            {dataIndex: 'isHazardChem', enum: 'yes_no'},
            {dataIndex: 'dangerChemCataSn'},
            {dataIndex: 'dangerChemCatalog'},
            {dataIndex: 'materialForm', enum: 'material_form'},
            {dataIndex: 'annualConsumption'},
            {dataIndex: 'maxInvLevel'},
            {dataIndex: 'actualReserves'},
            {dataIndex: 'measureDeviceUnit'},
            {dataIndex: 'measureDeviceUnitId'},
            {dataIndex: 'storeType'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'processFlow'},
            {dataIndex: 'isKeySupervisionProcess', enum: 'yes_no'},
            {dataIndex: 'keySupervisionProcess'},
            {dataIndex: 'highlyToxicChem', enum: 'yes_no'},
            {dataIndex: 'keyHazardChem', enum: 'yes_no'},
            {dataIndex: 'idSpecialHazardChem', enum: 'yes_no'},
            {dataIndex: 'safetyMeasures'},
            {dataIndex: 'emergencyMeasures'},
            {dataIndex: 'easyMakePoison', enum: 'yes_no'},
            {dataIndex: 'easyMakeExplode', enum: 'yes_no'},
        ],
    }
    const pm_basic_material_product = {
        columns: [
            {dataIndex: 'prodMaterialCode'},
            {dataIndex: 'productName'},
            {dataIndex: 'casNo'},
            {dataIndex: 'isHazardChem', enum: 'yes_no'},
            {dataIndex: 'dangerChemCataSn'},
            {dataIndex: 'dangerChemCatalog'},
            {dataIndex: 'materialForm', enum: 'material_form'},
            {dataIndex: 'annualSupply'},
            {dataIndex: 'maxInvLevel'},
            {dataIndex: 'actualReserves'},
            {dataIndex: 'measureDeviceUnit'},
            {dataIndex: 'measureDeviceUnitId'},
            {dataIndex: 'storeType'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'processFlow'},
            {dataIndex: 'isKeySupervisionProcess', enum: 'yes_no'},
            {dataIndex: 'highlyToxicChem', enum: 'yes_no'},
            {dataIndex: 'keyHazardChem', enum: 'yes_no'},
            {dataIndex: 'idSpecialHazardChem', enum: 'yes_no'},
            {dataIndex: 'safetyMeasures'},
            {dataIndex: 'emergencyMeasures'},
            {dataIndex: 'easyMakePoison', enum: 'yes_no'},
            {dataIndex: 'easyMakeExplode', enum: 'yes_no'},
        ],
    }
    const pm_basic_chemical = {
        columns: [
            {dataIndex: 'chemCode'},
            {dataIndex: 'chemName'},
            {dataIndex: 'alias'},
            {dataIndex: 'modelType'},
            {dataIndex: 'helpRemember'},
            {dataIndex: 'chemType', enum: 'chem_type'},
            {dataIndex: 'chemCategory'},
            {dataIndex: 'casNo'},
            {dataIndex: 'chemSymbol'},
            {dataIndex: 'measureUnit'},
            {dataIndex: 'reserveTypeLocation'},
            {dataIndex: 'isHazardChemical', enum: 'yes_no'},
            {dataIndex: 'materialForm', enum: 'material_form'},
            {dataIndex: 'flashPoint'},
            {dataIndex: 'boilPoint'},
            {dataIndex: 'relateWaterDensity'},
            {dataIndex: 'relateAirDensity'},
            {dataIndex: 'fireDangerCatalog'},
            {dataIndex: 'explosionLimit'},
            {dataIndex: 'isHazardChem', enum: 'yes_no'},
            {dataIndex: 'dangerChemCatalog'},
            {dataIndex: 'dangerChemCatalogSn'},
            {dataIndex: 'highToxic', enum: 'yes_no'},
            {dataIndex: 'easyToxic', enum: 'yes_no'},
            {dataIndex: 'easyExplode', enum: 'yes_no'},
            {dataIndex: 'careerHazardLevel'},
        ],
    }
    const pm_basic_chemical_msds = {
        columns: [
            {dataIndex: 'chemCode'},
            {dataIndex: 'chemName'},
            {dataIndex: 'alias'},
            {dataIndex: 'casNo'},
            {dataIndex: 'chemType', enum: 'chem_type'},
            {dataIndex: 'fileCode'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'effectiveDate'},
            {dataIndex: 'disableDate'},
            {dataIndex: 'updateDate'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_basic_chemical_tag = {
        columns: [
            {dataIndex: 'chemName'},
            {dataIndex: 'alias'},
            {dataIndex: 'casNo'},
            {dataIndex: 'chemType', enum: 'chem_type'},
            {dataIndex: 'fileCode'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'effectiveDate'},
            {dataIndex: 'disableDate'},
            {dataIndex: 'updateDate'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_basic_chemical_inv = {
        columns: [
            {dataIndex: 'chemCode'},
            {dataIndex: 'chemName'},
            {dataIndex: 'alias'},
            {dataIndex: 'casNo'},
            {dataIndex: 'chemType', enum: 'chem_type'},
            {dataIndex: 'chemCategory'},
            {dataIndex: 'chemSymbol'},
            {dataIndex: 'warehouseName'},
            {dataIndex: 'designStorage'},
            {dataIndex: 'currentStorage'},
        ],
        childTables: [
            'pm_basic_chemical_inv_record',
        ]
    }
    const pm_basic_chemical_inv_record = {
        columns: [
            {dataIndex: 'chemCode'},
            {dataIndex: 'chemName'},
            {dataIndex: 'quantity'},
            {dataIndex: 'chemInoutType', enum: 'chem_inout_type'},
            {dataIndex: 'warehouseName'},
            {dataIndex: 'operatePerson'},
            {dataIndex: 'operateTime'},
            {dataIndex: 'chemUsage'},
        ],
    }
    const js_chemical_sds = {
        columns: [
            {dataIndex: 'chemZhName'},
            {dataIndex: 'chemEnName'},
            {dataIndex: 'instructionNo'},
            {dataIndex: 'casNo'},
            {dataIndex: 'molecularFormula'},
            {dataIndex: 'molecularWeight'},
            {dataIndex: 'contentPct'},
            {dataIndex: 'healthHazard'},
            {dataIndex: 'ecvironmentalHazard'},
            {dataIndex: 'explosionHazard'},
            {dataIndex: 'skinContact'},
            {dataIndex: 'eyeContact'},
            {dataIndex: 'inhale'},
            {dataIndex: 'ingestion'},
            {dataIndex: 'hazardousCharacteristics'},
            {dataIndex: 'hazardousCombustionProducts'},
            {dataIndex: 'fireFightingMethods'},
            {dataIndex: 'emergencyTreatment'},
            {dataIndex: 'operationPrecautions'},
            {dataIndex: 'storagePrecautions'},
            {dataIndex: 'chinaMac'},
            {dataIndex: 'tlvtc'},
            {dataIndex: 'tlvwc'},
            {dataIndex: 'engineeringControl'},
            {dataIndex: 'respiratoryProtection'},
            {dataIndex: 'eyeProtection'},
            {dataIndex: 'bodyProtection'},
            {dataIndex: 'handProtection'},
            {dataIndex: 'otherProtection'},
            {dataIndex: 'mainIngrediects'},
            {dataIndex: 'appearacceAndTraits'},
            {dataIndex: 'meltingPoint'},
            {dataIndex: 'boilingPoint'},
            {dataIndex: 'relativeDecsity'},
            {dataIndex: 'relativeVaporDecsity'},
            {dataIndex: 'saturatedVaporPressure'},
            {dataIndex: 'heatOfCombustion'},
            {dataIndex: 'criticalTemperature'},
            {dataIndex: 'criticalPressure'},
            {dataIndex: 'logValueOfWaterPartitionCoefficient'},
            {dataIndex: 'flashPoint'},
            {dataIndex: 'ignitionTemperature'},
            {dataIndex: 'higherExplosionlimit'},
            {dataIndex: 'lowerExplosionlimit'},
            {dataIndex: 'mainPurpose'},
            {dataIndex: 'incompatibleMaterials'},
            {dataIndex: 'acuteToxicityLd50'},
            {dataIndex: 'acuteToxicityLc50'},
            {dataIndex: 'otherHarmfulEffects'},
            {dataIndex: 'wasteDisposalMethods'},
            {dataIndex: 'dangerousGoodsnumber'},
            {dataIndex: 'ucNumber'},
            {dataIndex: 'packingType'},
            {dataIndex: 'packingMethod'},
            {dataIndex: 'transportNotice'},
            {dataIndex: 'regulationInfo'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const js_lab_chemical_check = {
        columns: [
            {dataIndex: 'chemName'},
            {dataIndex: 'labLocation'},
            {dataIndex: 'casNo'},
            {dataIndex: 'unCode'},
            {dataIndex: 'dangerCode'},
            {dataIndex: 'annualDemand'},
            {dataIndex: 'maxStock'},
            {dataIndex: 'regNum'},
            {dataIndex: 'catalog'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'notes'},
        ],
    }
    const js_chemical_safety_label = {
        columns: [
            {dataIndex: 'chemName'},
            {dataIndex: 'labelAttach', link: 'txt'},
            {dataIndex: 'fillPerson'},
            {dataIndex: 'fillTime'},
            {dataIndex: 'notes'},
        ],
    }
    const js_danger_chemical_record = {
        columns: [
            {dataIndex: 'chemName'},
            {dataIndex: 'anualUsage'},
            {dataIndex: 'maxStock'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'liablePersonPhone'},
            {dataIndex: 'reportAppendix', link: 'txt'},
            {dataIndex: 'filingTime'},
            {dataIndex: 'filingAppendix', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const js_waste_chemical_handle = {
        columns: [
            {dataIndex: 'chemName'},
            {dataIndex: 'hazardCharacteristics'},
            {dataIndex: 'disposalMethod'},
            {dataIndex: 'safetyMeasures'},
            {dataIndex: 'recordPerson'},
            {dataIndex: 'auditor'},
            {dataIndex: 'approver'},
            {dataIndex: 'registerRecordTime'},
            {dataIndex: 'registerRecordAttach', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_basic_mh_ident1 = {
        columns: [
            {dataIndex: 'chemName'},
            {dataIndex: 'alias'},
            {dataIndex: 'casNo'},
            {dataIndex: 'threshold'},
            {dataIndex: 'adjustBeta'},
        ],
    }
    const pm_basic_mh_ident2 = {
        columns: [
            {dataIndex: 'chemCategory'},
            {dataIndex: 'chemSymbol'},
            {dataIndex: 'mhChemDesc'},
            {dataIndex: 'threshold'},
            {dataIndex: 'adjustBeta'},
        ],
    }
    const pm_file_list = {
        columns: [
            {dataIndex: 'fileName'},
            {dataIndex: 'fileCode'},
            {dataIndex: 'fileVer'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'implementDate'},
            {dataIndex: 'publishRange'},
            {dataIndex: 'fileLevel'},
            {dataIndex: 'pressNum'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_basic_building = {
        columns: [
            {dataIndex: 'buildingName'},
            {dataIndex: 'structureType', enum: 'build_struct'},
            {dataIndex: 'buildingArea'},
            {dataIndex: 'floorArea'},
            {dataIndex: 'floors'},
            {dataIndex: 'buildingHeight'},
            {dataIndex: 'fireResistantLevel', enum: 'fire_resistant_level'},
            {dataIndex: 'useStartDate'},
            {dataIndex: 'fireHazardLevel', enum: 'fire_hazard_level'},
            {dataIndex: 'designUnit'},
            {dataIndex: 'buildLicense', link: 'txt'},
            {dataIndex: 'lightProtectLicense', link: 'txt'},
            {dataIndex: 'fireProtectLicense', link: 'txt'},
        ],
        childTables: [
            'pm_basic_building_fire_facility',
        ]
    }
    const pm_basic_building_fire_facility = {
        columns: [
            {dataIndex: 'buildingName'},
            {dataIndex: 'fireFacilityName'},
            {dataIndex: 'model'},
            {dataIndex: 'count'},
            {dataIndex: 'usage'},
        ],
    }
    const pm_basic_vehicle = {
        columns: [
            {dataIndex: 'vehiclePlateNum'},
            {dataIndex: 'vehicleName'},
            {dataIndex: 'vehicleType', enum: 'vehicle_type'},
            {dataIndex: 'driverName'},
            {dataIndex: 'driverLicense'},
            {dataIndex: 'approvedRoad'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_safety_assess_report = {
        columns: [
            {dataIndex: 'reportName'},
            {dataIndex: 'makeTime'},
            {dataIndex: 'makeUnit'},
            {dataIndex: 'reportAttach', link: 'txt'},
            {dataIndex: 'registerRecordTime'},
            {dataIndex: 'registerRecordAttach', link: 'txt'},
            {dataIndex: 'reportEndTime'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_project_three_sim = {
        columns: [
            {dataIndex: 'projectName'},
            {dataIndex: 'projectCode'},
            {dataIndex: 'projectCharacter', enum: 'project_props'},
            {dataIndex: 'projectBuildUnit'},
            {dataIndex: 'projectInvestTotal'},
            {dataIndex: 'projectBuildLoc'},
            {dataIndex: 'projectProgress', enum: 'project_progress'},
            {dataIndex: 'projectStartDate'},
            {dataIndex: 'projectEndDate'},
            {dataIndex: 'projectDescription'},
            {dataIndex: 'safetyDeviceThree'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_basic_shop_floor = {
        columns: [
            {dataIndex: 'shopFloorName'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'notes'},
        ],
        childTables: [
            'pm_basic_group',
        ]
    }
    const pm_basic_group = {
        columns: [
            {dataIndex: 'groupName'},
            {dataIndex: 'shopFloorName'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'groupResp'},
        ],
    }
    const pm_basic_work_title = {
        columns: [
            {dataIndex: 'workTitle'},
            {dataIndex: 'workResp'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_equipment_port = {
        columns: [
            {dataIndex: 'eportName'},
            {dataIndex: 'eportLocation'},
            {dataIndex: 'eportEquipment'},
            {dataIndex: 'eportPhoto', link: 'pic'},
            {dataIndex: 'longitude'},
            {dataIndex: 'latitude'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_basic_entpr_envr_info = {
        columns: [
            {dataIndex: 'envrType', enum: 'surr_env'},
            {dataIndex: 'envrName'},
            {dataIndex: 'envrDirection', enum: 'env_direct'},
            {dataIndex: 'minDistanceEntpr'},
            {dataIndex: 'buildStruct'},
            {dataIndex: 'adjacentBuildHeight'},
            {dataIndex: 'personNum'},
            {dataIndex: 'contactPerson'},
            {dataIndex: 'contactPersonTel'},
            {dataIndex: 'contactPersonMobile'},
            {dataIndex: 'contactPersonEmail'},
            {dataIndex: 'sitePic', link: 'pic'},
            {dataIndex: 'longitude'},
            {dataIndex: 'latitude'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_basic_public_construction = {
        columns: [
            {dataIndex: 'publicWorksCode'},
            {dataIndex: 'publicWorksName'},
            {dataIndex: 'publicWorksLocation'},
            {dataIndex: 'publicWorksType'},
            {dataIndex: 'publicWorksFunction'},
            {dataIndex: 'mainMedium'},
            {dataIndex: 'equipmentFacilities'},
            {dataIndex: 'environment'},
            {dataIndex: 'emergencyMethod'},
            {dataIndex: 'autoControlMode'},
            {dataIndex: 'sitePic', link: 'pic'},
            {dataIndex: 'longitude'},
            {dataIndex: 'latitude'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_target_index = {
        columns: [
            {dataIndex: 'targetIndexCode'},
            {dataIndex: 'targetIndex'},
            {dataIndex: 'year'},
            {dataIndex: 'finishDue'},
            {dataIndex: 'indexCompare', enum: 'index_compare'},
            {dataIndex: 'indexValue'},
            {dataIndex: 'indexValueUnit'},
            {dataIndex: 'targetLevel', enum: 'target_level'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_target_assign = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'formulatier'},
            {dataIndex: 'formulateDept'},
            {dataIndex: 'formulateDate'},
            {dataIndex: 'totalExpectFee'},
            {dataIndex: 'reportPerson'},
            {dataIndex: 'latestReportDate'},
        ],
        childTables: [
            'pm_target_assign_detail',
            'pm_target_report',
            'pm_target_check',
        ]
    }
    const pm_target_assign_detail = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'targetIndexCode'},
            {dataIndex: 'targetIndex'},
            {dataIndex: 'indexCompare', enum: 'index_compare'},
            {dataIndex: 'indexValue'},
            {dataIndex: 'indexValueUnit'},
            {dataIndex: 'finishDue'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'targetPlan'},
            {dataIndex: 'expectFee'},
            {dataIndex: 'usability', enum: 'usability'},
            {dataIndex: 'finishDate'},
            {dataIndex: 'finishValue'},
            {dataIndex: 'finishStatus'},
            {dataIndex: 'resultStatus', enum: 'result_status'},
        ],
    }
    const pm_target_report = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'targetMonth'},
            {dataIndex: 'targetReportDate'},
            {dataIndex: 'reportPerson'},
        ],
        childTables: [
            'pm_target_report_detail',
        ]
    }
    const pm_target_report_detail = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'targetMonth'},
            {dataIndex: 'targetIndexCode'},
            {dataIndex: 'targetIndex'},
            {dataIndex: 'indexCompare', enum: 'index_compare'},
            {dataIndex: 'indexValue'},
            {dataIndex: 'indexValueUnit'},
            {dataIndex: 'finishValue'},
            {dataIndex: 'finishStatus'},
        ],
    }
    const pm_target_check = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'targetMonth'},
            {dataIndex: 'targetCheckDate'},
            {dataIndex: 'checker'},
            {dataIndex: 'checkerDepart'},
        ],
        childTables: [
            'pm_target_check_detail',
        ]
    }
    const pm_target_check_detail = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'targetMonth'},
            {dataIndex: 'targetIndexCode'},
            {dataIndex: 'targetIndex'},
            {dataIndex: 'indexCompare', enum: 'index_compare'},
            {dataIndex: 'indexValue'},
            {dataIndex: 'indexValueUnit'},
            {dataIndex: 'indexCheckValue'},
            {dataIndex: 'resultStatus', enum: 'result_status'},
        ],
    }
    const pm_safety_produce_manage_net = {
        columns: [
            {dataIndex: 'parentNodeName'},
            {dataIndex: 'nodeName'},
            {dataIndex: 'mainDirector'},
            {dataIndex: 'directorTel'},
            {dataIndex: 'safetyDuty'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_safety_produce_duty = {
        columns: [
            {dataIndex: 'jobTitle'},
            {dataIndex: 'safetyDuty'},
            {dataIndex: 'maker'},
            {dataIndex: 'auditor'},
            {dataIndex: 'approvePerson'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_safety_produce_duty_appraise = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'jobTitle'},
            {dataIndex: 'employeeName'},
            {dataIndex: 'safetyDuty'},
            {dataIndex: 'safetyAppraiseReward'},
            {dataIndex: 'safetyAppraisePunish'},
            {dataIndex: 'safetyAppraiseResult'},
            {dataIndex: 'examPerson'},
            {dataIndex: 'examDate'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_safety_promise = {
        columns: [
            {dataIndex: 'promiser'},
            {dataIndex: 'mobile'},
            {dataIndex: 'jobTitle'},
            {dataIndex: 'promiseAttach', link: 'txt'},
            {dataIndex: 'year'},
            {dataIndex: 'promiseItems'},
            {dataIndex: 'directLeader'},
            {dataIndex: 'promissDate'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_employee_on_watch = {
        columns: [
            {dataIndex: 'personOnDuty'},
            {dataIndex: 'employeeNo'},
            {dataIndex: 'mobile'},
            {dataIndex: 'jobTitle'},
            {dataIndex: 'startTime'},
            {dataIndex: 'endTime'},
        ],
    }
    const pm_employee_on_duty = {
        columns: [
            {dataIndex: 'personOnDuty'},
            {dataIndex: 'employeeNo'},
            {dataIndex: 'mobile'},
            {dataIndex: 'jobTitle'},
            {dataIndex: 'areaInTime'},
            {dataIndex: 'areaOutTime'},
        ],
    }
    const pm_leader_duty_shift = {
        columns: [
            {dataIndex: 'dutyStartTime'},
            {dataIndex: 'dutyEndTime'},
            {dataIndex: 'dutyLeader'},
            {dataIndex: 'dutyCheckRecord'},
            {dataIndex: 'dutyQuestionRecord'},
            {dataIndex: 'dutyReviewRecord'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_leader_appraise = {
        columns: [
            {dataIndex: 'rewardDesc'},
            {dataIndex: 'rewardReason'},
            {dataIndex: 'punishDesc'},
            {dataIndex: 'punishReason'},
            {dataIndex: 'examPerson'},
            {dataIndex: 'examDate'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_operator_shift = {
        columns: [
            {dataIndex: 'shiftNum'},
            {dataIndex: 'shiftFromPerson'},
            {dataIndex: 'shiftToPerson'},
            {dataIndex: 'handoverIssues'},
            {dataIndex: 'handoverNotes'},
            {dataIndex: 'shiftTime'},
            {dataIndex: 'personOnDuty'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_safety_cost_input = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'salesIncome'},
            {dataIndex: 'industryClass', enum: 'industry_class'},
            {dataIndex: 'drawStandard'},
            {dataIndex: 'drawMoney'},
        ],
    }
    const pm_safety_cost = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'putTime'},
            {dataIndex: 'costClass', enum: 'cost_class'},
            {dataIndex: 'projectName'},
            {dataIndex: 'projectMoney'},
        ],
    }
    const pm_safety_produce_cost = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'salesIncome'},
            {dataIndex: 'drawFee'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_safety_dynmic = {
        columns: [
            {dataIndex: 'safetyActPic', link: 'pic'},
            {dataIndex: 'safetyActTopic'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'actReleaser'},
            {dataIndex: 'actReleaseDept'},
            {dataIndex: 'actReleaseContent'},
            {dataIndex: 'isTop', enum: 'yes_no'},
        ],
    }
    const pm_safety_suggestion = {
        columns: [
            {dataIndex: 'safetySuggTopic'},
            {dataIndex: 'safetySuggContent'},
            {dataIndex: 'safetySuggReleaser'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'safetySuggType', enum: 'safety_sugg_type'},
        ],
    }
    const pm_safety_activity_record = {
        columns: [
            {dataIndex: 'activityName'},
            {dataIndex: 'activityTime'},
            {dataIndex: 'location'},
            {dataIndex: 'callDept'},
            {dataIndex: 'coopDept'},
            {dataIndex: 'jionDept'},
            {dataIndex: 'caller'},
            {dataIndex: 'activityLevel', enum: 'activity_level'},
            {dataIndex: 'activityContent'},
            {dataIndex: 'activitySituation'},
            {dataIndex: 'involvedPersons'},
            {dataIndex: 'status', enum: 'activity_status'},
            {dataIndex: 'activityPicVid', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_safety_meeting_record = {
        columns: [
            {dataIndex: 'meetingTopic'},
            {dataIndex: 'meetingTime'},
            {dataIndex: 'meetingStatus', enum: 'meeting_status'},
            {dataIndex: 'callDept'},
            {dataIndex: 'meetingHost'},
            {dataIndex: 'joinDept'},
            {dataIndex: 'meetingType', enum: 'meeting_type'},
            {dataIndex: 'meetingAddress'},
            {dataIndex: 'joinPersons'},
            {dataIndex: 'meetingContent'},
            {dataIndex: 'meetingFeedback'},
            {dataIndex: 'meetingTodo'},
            {dataIndex: 'recorder'},
            {dataIndex: 'meetingRecord', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_leader_safety_activity = {
        columns: [
            {dataIndex: 'leaderName'},
            {dataIndex: 'ativityTime'},
            {dataIndex: 'ativityTopic'},
            {dataIndex: 'ativityContent'},
            {dataIndex: 'deviceKeyPart'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_rule_law = {
        columns: [
            {dataIndex: 'lawCode'},
            {dataIndex: 'lawName'},
            {dataIndex: 'lawNo'},
            {dataIndex: 'catalog', enum: 'law_type'},
            {dataIndex: 'identifyDate'},
            {dataIndex: 'publishOrg'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'effectiveDate'},
            {dataIndex: 'reviewDate'},
            {dataIndex: 'importPerson'},
            {dataIndex: 'importDate'},
            {dataIndex: 'lawDiffAttach', link: 'txt'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_rule_law_department = {
        columns: [
            {dataIndex: 'lawName'},
            {dataIndex: 'lawNo'},
            {dataIndex: 'publishOrg'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'effectiveDate'},
            {dataIndex: 'adaptItem'},
            {dataIndex: 'controlItem'},
            {dataIndex: 'riskSituation'},
            {dataIndex: 'adaptDept'},
            {dataIndex: 'suitableAssess', enum: 'yes_no'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_rule_law_safety = {
        columns: [
            {dataIndex: 'lawName'},
            {dataIndex: 'lawNo'},
            {dataIndex: 'publishOrg'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'effectiveDate'},
            {dataIndex: 'disableDate'},
            {dataIndex: 'adaptDept'},
        ],
        childTables: [
            'pm_rule_law_safety_detail',
        ]
    }
    const pm_rule_law_safety_detail = {
        columns: [
            {dataIndex: 'lawName'},
            {dataIndex: 'adaptItem'},
            {dataIndex: 'effectiveDate'},
            {dataIndex: 'controlItem'},
            {dataIndex: 'riskSituation'},
            {dataIndex: 'adaptDept'},
            {dataIndex: 'suitableAssess', enum: 'yes_no'},
        ],
    }
    const pm_safety_rule = {
        columns: [
            {dataIndex: 'securityRuleCode'},
            {dataIndex: 'securityRuleName'},
            {dataIndex: 'securityRuleType'},
            {dataIndex: 'publishDept'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'estimateDate'},
            {dataIndex: 'estimatePerson'},
            {dataIndex: 'estimateParticipant'},
            {dataIndex: 'fillMan'},
            {dataIndex: 'fillManDept'},
            {dataIndex: 'estimateAdvice'},
            {dataIndex: 'ruleAttach', link: 'txt'},
            {dataIndex: 'estimateAttach', link: 'txt'},
        ],
    }
    const pm_safety_rule_op = {
        columns: [
            {dataIndex: 'opRuleCode'},
            {dataIndex: 'opRuleName'},
            {dataIndex: 'opRuleType'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'publishDept'},
            {dataIndex: 'adaptDept'},
            {dataIndex: 'fillMan'},
            {dataIndex: 'fillManDept'},
            {dataIndex: 'summary'},
            {dataIndex: 'estimateDate'},
            {dataIndex: 'estimatePerson'},
            {dataIndex: 'estimateParticipant'},
            {dataIndex: 'estimateAdvice'},
            {dataIndex: 'opRuleAttach', link: 'txt'},
            {dataIndex: 'estimateAttach', link: 'txt'},
        ],
    }
    const pm_safety_rule_work = {
        columns: [
            {dataIndex: 'adaptArea'},
            {dataIndex: 'jobTitle'},
            {dataIndex: 'fileCode'},
            {dataIndex: 'publishDate'},
            {dataIndex: 'fillMan'},
            {dataIndex: 'auditor'},
            {dataIndex: 'approvePerson'},
            {dataIndex: 'estimateDate'},
            {dataIndex: 'estimatePerson'},
            {dataIndex: 'estimateParticipant'},
            {dataIndex: 'estimateAdvice'},
            {dataIndex: 'workRuleAttach', link: 'txt'},
            {dataIndex: 'estimateAttach', link: 'txt'},
        ],
    }
    const pm_basic_announcement = {
        columns: [
            {dataIndex: 'title'},
            {dataIndex: 'content'},
            {dataIndex: 'isPublished', enum: 'yes_no'},
            {dataIndex: 'publishTime'},
            {dataIndex: 'publisher'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_menu_resource = {
        columns: [
            {dataIndex: 'menuName'},
            {dataIndex: 'path'},
            {dataIndex: 'icon'},
        ],
    }
    const exm_training_course = {
        columns: [
            {dataIndex: 'trainingCourseName'},
            {dataIndex: 'subject'},
            {dataIndex: 'trainingCourseIntroduction'},
            {dataIndex: 'trainingCourseTeacher'},
            {dataIndex: 'trainingMaterialCount'},
            {dataIndex: 'questionCount'},
            {dataIndex: 'reqStudyMinutes'},
        ],
        childTables: [
            'exm_training_material',
            'exm_training_course_question',
        ]
    }
    const exm_training_material = {
        columns: [
            {dataIndex: 'trainingCourseName'},
            {dataIndex: 'trainingMaterialName'},
            {dataIndex: 'trainingMaterialFile', link: 'txt'},
            {dataIndex: 'coverImg', link: 'pic'},
            {dataIndex: 'uploader'},
            {dataIndex: 'uploadTime'},
        ],
    }
    const exm_training_course_question = {
        columns: [
            {dataIndex: 'trainingCourseName'},
            {dataIndex: 'subject'},
            {dataIndex: 'questionCode'},
            {dataIndex: 'questionType', enum: 'exam_question_type'},
            {dataIndex: 'question'},
            {dataIndex: 'stdAnswer'},
            {dataIndex: 'referenceAnswer'},
        ],
    }
    const exm_training_plan = {
        columns: [
            {dataIndex: 'trainingPlanCode'},
            {dataIndex: 'trainingName'},
            {dataIndex: 'trainingDepart'},
            {dataIndex: 'trainingContent'},
            {dataIndex: 'trainingPlanDate'},
            {dataIndex: 'maker'},
            {dataIndex: 'makeDepart'},
            {dataIndex: 'trainingTeacher'},
            {dataIndex: 'trainingLvl', enum: 'training_lvl'},
            {dataIndex: 'trainingMethod', enum: 'training_method'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const exm_training_activity = {
        columns: [
            {dataIndex: 'trainingActivityCode'},
            {dataIndex: 'trainingActivityName'},
            {dataIndex: 'examStatus', enum: 'exam_paper_status'},
            {dataIndex: 'trainingBeginDate'},
            {dataIndex: 'trainingEndDate'},
            {dataIndex: 'isInternalTraining', enum: 'yes_no'},
            {dataIndex: 'coverImg', link: 'pic'},
            {dataIndex: 'subject'},
            {dataIndex: 'needTraining', enum: 'yes_no'},
            {dataIndex: 'trainingPlanCode'},
            {dataIndex: 'trainingType'},
            {dataIndex: 'trainingDepart'},
            {dataIndex: 'trainingHour'},
            {dataIndex: 'trainingLocation'},
            {dataIndex: 'trainingTeacher'},
            {dataIndex: 'needPractice', enum: 'yes_no'},
            {dataIndex: 'totalReqStudyMinutes'},
            {dataIndex: 'needExam', enum: 'yes_no'},
            {dataIndex: 'examBeginTime'},
            {dataIndex: 'examMinutes'},
            {dataIndex: 'totalScore'},
            {dataIndex: 'passScore'},
            {dataIndex: 'questionCount'},
            {dataIndex: 'trueFalseCount'},
            {dataIndex: 'choiceCount'},
            {dataIndex: 'multiChoiceCount'},
            {dataIndex: 'fillInTheBlankCount'},
            {dataIndex: 'notes'},
        ],
        childTables: [
            'exm_training_activity_course',
            'exm_training_person',
        ]
    }
    const exm_training_activity_course = {
        columns: [
            {dataIndex: 'trainingActivityCode'},
            {dataIndex: 'trainingActivityName'},
            {dataIndex: 'trainingDepart'},
            {dataIndex: 'trainingCourseName'},
            {dataIndex: 'subject'},
            {dataIndex: 'reqStudyMinutes'},
            {dataIndex: 'notes'},
        ],
    }
    const exm_training_person = {
        columns: [
            {dataIndex: 'trainingActivityCode'},
            {dataIndex: 'trainingActivityName'},
            {dataIndex: 'employeeName'},
            {dataIndex: 'employeeNo'},
            {dataIndex: 'department'},
            {dataIndex: 'ctrWorkerMobile'},
            {dataIndex: 'ctrWorkerName'},
            {dataIndex: 'contractorName'},
            {dataIndex: 'trainingScore'},
            {dataIndex: 'trainingResult', enum: 'training_result'},
        ],
    }
    const exm_practice_question = {
        columns: [
            {dataIndex: 'creatorName'},
            {dataIndex: 'creatorDept'},
            {dataIndex: 'subject'},
            {dataIndex: 'questionType', enum: 'exam_question_type'},
            {dataIndex: 'totalTimeStr'},
        ],
    }
    const exm_question = {
        columns: [
            {dataIndex: 'questionCode'},
            {dataIndex: 'subject'},
            {dataIndex: 'questionType', enum: 'exam_question_type'},
            {dataIndex: 'questionDifficulty', enum: 'exam_question_difficulty'},
            {dataIndex: 'question'},
            {dataIndex: 'questionOptions'},
            {dataIndex: 'stdAnswer'},
            {dataIndex: 'referenceAnswer'},
        ],
    }
    const exm_paper = {
        columns: [
            {dataIndex: 'examName'},
            {dataIndex: 'subject'},
            {dataIndex: 'totalScore'},
            {dataIndex: 'passScore'},
            {dataIndex: 'paperType', enum: 'exam_paper_type'},
            {dataIndex: 'questionCount'},
            {dataIndex: 'examMinutes'},
            {dataIndex: 'coverImg', link: 'pic'},
            {dataIndex: 'essayScoreMethod', enum: 'exam_score_method'},
            {dataIndex: 'paperStatus', enum: 'exam_paper_status'},
            {dataIndex: 'releaseMethod', enum: 'exam_release_method'},
            {dataIndex: 'examBeginTime'},
            {dataIndex: 'examEndTime'},
            {dataIndex: 'trainingActivityCode'},
            {dataIndex: 'trainingActivityName'},
        ],
        childTables: [
            'exm_paper_question',
        ]
    }
    const exm_major_exam = {
        columns: [
            {dataIndex: 'examName'},
            {dataIndex: 'totalScore'},
            {dataIndex: 'passScore'},
            {dataIndex: 'questionCount'},
            {dataIndex: 'examMinutes'},
            {dataIndex: 'examBeginTime'},
            {dataIndex: 'examEndTime'},
            {dataIndex: 'coverImg', link: 'pic'},
            {dataIndex: 'essayScoreMethod', enum: 'exam_score_method'},
            {dataIndex: 'examStatus', enum: 'exam_paper_status'},
            {dataIndex: 'releaseMethod', enum: 'exam_release_method'},
            {dataIndex: 'trueFalseCount'},
            {dataIndex: 'trueFalseScore'},
            {dataIndex: 'choiceCount'},
            {dataIndex: 'choiceScore'},
            {dataIndex: 'multiChoiceCount'},
            {dataIndex: 'multiChoiceScore'},
            {dataIndex: 'fillInTheBlankCount'},
            {dataIndex: 'fillInTheBlankScore'},
            {dataIndex: 'essayCount'},
            {dataIndex: 'essayScore'},
        ],
    }
    const exm_period_exam = {
        columns: [
            {dataIndex: 'examName'},
            {dataIndex: 'subject'},
            {dataIndex: 'totalScore'},
            {dataIndex: 'passScore'},
            {dataIndex: 'questionCount'},
            {dataIndex: 'examMinutes'},
            {dataIndex: 'examBeginTime'},
            {dataIndex: 'examEndTime'},
            {dataIndex: 'examMaxCount'},
            {dataIndex: 'coverImg', link: 'pic'},
            {dataIndex: 'examStatus', enum: 'exam_paper_status'},
            {dataIndex: 'releaseMethod', enum: 'exam_release_method'},
            {dataIndex: 'trueFalseCount'},
            {dataIndex: 'trueFalseCountDetail'},
            {dataIndex: 'trueFalseScore'},
            {dataIndex: 'choiceCount'},
            {dataIndex: 'choiceCountDetail'},
            {dataIndex: 'choiceScore'},
            {dataIndex: 'multiChoiceCount'},
            {dataIndex: 'multiChoiceCountDetail'},
            {dataIndex: 'multiChoiceScore'},
            {dataIndex: 'fillInTheBlankCount'},
            {dataIndex: 'fillInTheBlankCountDetail'},
            {dataIndex: 'fillInTheBlankScore'},
            {dataIndex: 'essayCount'},
            {dataIndex: 'essayCountDetail'},
            {dataIndex: 'essayScore'},
        ],
        childTables: [
            'exm_period_examinee',
        ]
    }
    const exm_period_examinee = {
        columns: [
            {dataIndex: 'examName'},
            {dataIndex: 'subject'},
            {dataIndex: 'examineeCode'},
            {dataIndex: 'examineeName'},
            {dataIndex: 'examineeDept'},
            {dataIndex: 'examineeHighestScore'},
            {dataIndex: 'examCount'},
            {dataIndex: 'totalTakeTime'},
            {dataIndex: 'examBeginTime'},
            {dataIndex: 'examEndTime'},
            {dataIndex: 'totalScore'},
            {dataIndex: 'passScore'},
            {dataIndex: 'coverImg', link: 'pic'},
            {dataIndex: 'examStatus', enum: 'exam_paper_status'},
            {dataIndex: 'releaseMethod', enum: 'exam_release_method'},
        ],
    }
    const exm_paper_question = {
        columns: [
            {dataIndex: 'examName'},
            {dataIndex: 'questionSeqNum'},
            {dataIndex: 'questionCode'},
            {dataIndex: 'questionType', enum: 'exam_question_type'},
            {dataIndex: 'question'},
            {dataIndex: 'questionScore'},
            {dataIndex: 'scoreMethod', enum: 'exam_score_method'},
            {dataIndex: 'subject'},
        ],
    }
    const exm_paper_examinee = {
        columns: [
            {dataIndex: 'examName'},
            {dataIndex: 'examineeCode'},
            {dataIndex: 'examineeName'},
            {dataIndex: 'examineeDept'},
            {dataIndex: 'subject'},
            {dataIndex: 'examineStatus', enum: 'exam_paper_examination_status'},
            {dataIndex: 'examineeTotalScore'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'takeTime'},
            {dataIndex: 'totalScore'},
            {dataIndex: 'passScore'},
            {dataIndex: 'questionCount'},
            {dataIndex: 'paperType', enum: 'exam_paper_type'},
            {dataIndex: 'examMinutes'},
            {dataIndex: 'paperStatus', enum: 'exam_paper_status'},
            {dataIndex: 'releaseMethod', enum: 'exam_release_method'},
            {dataIndex: 'examBeginTime'},
            {dataIndex: 'examEndTime'},
            {dataIndex: 'trainingActivityCode'},
        ],
    }
    const exm_paper_question_examinee = {
        columns: [
            {dataIndex: 'examName'},
            {dataIndex: 'questionSeqNum'},
            {dataIndex: 'questionCode'},
            {dataIndex: 'questionType', enum: 'exam_question_type'},
            {dataIndex: 'question'},
            {dataIndex: 'examineeCode'},
            {dataIndex: 'examineeAnswer'},
            {dataIndex: 'examineeScore'},
            {dataIndex: 'questionScore'},
            {dataIndex: 'scoreMethod', enum: 'exam_score_method'},
        ],
    }
    const exm_study_summary = {
        columns: [
            {dataIndex: 'examineeCode'},
            {dataIndex: 'examineeName'},
            {dataIndex: 'year'},
            {dataIndex: 'totalTimeStr'},
        ],
        childTables: [
            'exm_study_training',
        ]
    }
    const exm_study_training = {
        columns: [
            {dataIndex: 'examineeCode'},
            {dataIndex: 'examineeName'},
            {dataIndex: 'year'},
            {dataIndex: 'trainingActivityCode'},
            {dataIndex: 'trainingActivityName'},
            {dataIndex: 'subject'},
            {dataIndex: 'totalRecordTime'},
            {dataIndex: 'totalTimeStr'},
            {dataIndex: 'totalReqStudyMinutes'},
        ],
        childTables: [
            'exm_study_training_time',
        ]
    }
    const exm_study_training_time = {
        columns: [
            {dataIndex: 'examineeCode'},
            {dataIndex: 'examineeName'},
            {dataIndex: 'year'},
            {dataIndex: 'trainingActivityCode'},
            {dataIndex: 'trainingActivityName'},
            {dataIndex: 'subject'},
            {dataIndex: 'date'},
            {dataIndex: 'totalRecordTime'},
            {dataIndex: 'totalTimeStr'},
        ],
    }
    const exm_examine_summary = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'subject'},
            {dataIndex: 'examType', enum: 'exam_paper_type'},
            {dataIndex: 'examName'},
            {dataIndex: 'examBeginTime'},
            {dataIndex: 'examineeTotalCount'},
            {dataIndex: 'examineePassCount'},
            {dataIndex: 'examineePassRate'},
            {dataIndex: 'examineeTotalTime'},
            {dataIndex: 'examineeAveTime'},
        ],
    }
    const exm_examine_subject_summary = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'subject'},
            {dataIndex: 'examineeStaffTotalCount'},
            {dataIndex: 'examineeStaffPassCount'},
            {dataIndex: 'examineeStaffPassRate'},
        ],
    }
    const exm_safety_training_assess = {
        columns: [
            {dataIndex: 'rpContent'},
            {dataIndex: 'rpDate'},
            {dataIndex: 'rpFee'},
            {dataIndex: 'rpBasis'},
            {dataIndex: 'rpName'},
            {dataIndex: 'rpType', enum: 'rp_type'},
            {dataIndex: 'approver'},
            {dataIndex: 'notes'},
        ],
    }
    const js_check_examine_upload = {
        columns: [
            {dataIndex: 'checkTime'},
            {dataIndex: 'checker'},
            {dataIndex: 'checkContent'},
            {dataIndex: 'checkResult'},
            {dataIndex: 'examTime'},
            {dataIndex: 'examPerson'},
            {dataIndex: 'examResult'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_tech_linked_lock = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'linkedLockType', enum: 'linked_lock_type'},
            {dataIndex: 'linkedLockStatus', enum: 'operate_props'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'latestLockAddDate'},
            {dataIndex: 'latestLockRemoveDate'},
            {dataIndex: 'lastCheckDate'},
            {dataIndex: 'nextCheckDate'},
            {dataIndex: 'addReminderDate'},
            {dataIndex: 'linkedLockDesc'},
            {dataIndex: 'checkCycleTime'},
            {dataIndex: 'checkReminderDate'},
            {dataIndex: 'checkContent'},
            {dataIndex: 'checkIndex'},
            {dataIndex: 'alertValue'},
            {dataIndex: 'linkedLockValue'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_tech_linked_remove = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'linkedLockType', enum: 'linked_lock_type'},
            {dataIndex: 'operateProps', enum: 'operate_props'},
            {dataIndex: 'applicant'},
            {dataIndex: 'requestTime'},
            {dataIndex: 'removeTime'},
            {dataIndex: 'reasonDesc'},
            {dataIndex: 'riskAssess'},
            {dataIndex: 'safetyPromise'},
            {dataIndex: 'safetyRequest'},
        ],
    }
    const pm_tech_linked_add = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'linkedLockType', enum: 'linked_lock_type'},
            {dataIndex: 'applicant'},
            {dataIndex: 'requestTime'},
            {dataIndex: 'runningDate'},
            {dataIndex: 'reasonDesc'},
            {dataIndex: 'runningDesc'},
            {dataIndex: 'runningStatus', enum: 'running_status'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_tech_linked_lock_check = {
        columns: [
            {dataIndex: 'inspector'},
            {dataIndex: 'inspectDate'},
            {dataIndex: 'inspectorDepart'},
            {dataIndex: 'notes'},
            {dataIndex: 'attach', link: 'txt'},
        ],
        childTables: [
            'pm_tech_linked_lock_check_content',
        ]
    }
    const pm_tech_linked_lock_check_content = {
        columns: [
            {dataIndex: 'inspector'},
            {dataIndex: 'inspectDate'},
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'inspectContent'},
            {dataIndex: 'inspectIndicator'},
            {dataIndex: 'inspectResult'},
            {dataIndex: 'status', enum: 'check_status'},
        ],
    }
    const pm_tech_linked_lock_exception = {
        columns: [
            {dataIndex: 'code'},
            {dataIndex: 'title'},
            {dataIndex: 'depart'},
            {dataIndex: 'filPerson'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'checkDate'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_tech_routing = {
        columns: [
            {dataIndex: 'routingCode'},
            {dataIndex: 'routingName'},
            {dataIndex: 'finalProduct'},
            {dataIndex: 'finalMaterialForm', enum: 'material_form'},
            {dataIndex: 'intermedProduct'},
            {dataIndex: 'intermediateMaterialForm', enum: 'material_form'},
            {dataIndex: 'reactionType'},
            {dataIndex: 'isHazardRouting', enum: 'yes_no'},
            {dataIndex: 'dangerousCharacter'},
            {dataIndex: 'keyMonitoringUnit'},
            {dataIndex: 'processParameters'},
            {dataIndex: 'controlMode', enum: 'control_mode'},
            {dataIndex: 'autoControl'},
            {dataIndex: 'operationNumber'},
            {dataIndex: 'certificatesNum'},
            {dataIndex: 'technicalSource', enum: 'technical_source'},
            {dataIndex: 'designUnit'},
            {dataIndex: 'designUnitQualLevel'},
            {dataIndex: 'isSatisfied', enum: 'yes_no'},
            {dataIndex: 'processBrief'},
            {dataIndex: 'routingPic', link: 'pic'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'majorHazardCode'},
        ],
        childTables: [
            'pm_tech_routing_op',
        ]
    }
    const pm_tech_routing_op = {
        columns: [
            {dataIndex: 'routingName'},
            {dataIndex: 'operateTime'},
            {dataIndex: 'operateContent'},
            {dataIndex: 'operator'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_site_contractor = {
        columns: [
            {dataIndex: 'contractorCode'},
            {dataIndex: 'contractorName'},
            {dataIndex: 'contractorProps'},
            {dataIndex: 'contractorCatalog', enum: 'contractor_catalog'},
            {dataIndex: 'contractorCertificate'},
            {dataIndex: 'certificateCode'},
            {dataIndex: 'certificateExpiryDate'},
            {dataIndex: 'businessScope'},
            {dataIndex: 'ctrDepartment'},
            {dataIndex: 'ctrLiablePerson'},
            {dataIndex: 'ctrIntTime'},
            {dataIndex: 'contractorTel'},
            {dataIndex: 'contractorMobile'},
            {dataIndex: 'mail'},
            {dataIndex: 'address'},
            {dataIndex: 'businessPractice'},
            {dataIndex: 'legalPerson'},
            {dataIndex: 'legalPersonTel'},
            {dataIndex: 'legalPersonIdent'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'safEnvAttach', link: 'txt'},
            {dataIndex: 'qualificationLevel', enum: 'qualification_level'},
            {dataIndex: 'comprehensiveEvaluation'},
            {dataIndex: 'constructTeamName'},
        ],
        childTables: [
            'pm_site_contractor_worker',
            'pm_site_contractor_certification',
            'pm_site_contractor_assess',
            'pm_site_contractor_work',
            'pm_site_contractor_break_rule',
        ]
    }
    const pm_site_contractor_assess = {
        columns: [
            {dataIndex: 'contractorName'},
            {dataIndex: 'title'},
            {dataIndex: 'examDepart'},
            {dataIndex: 'examDate'},
            {dataIndex: 'totalScore'},
            {dataIndex: 'examResult', enum: 'assess_result'},
            {dataIndex: 'aduitFrontType'},
            {dataIndex: 'aduitType'},
            {dataIndex: 'contractorFactory'},
            {dataIndex: 'contractorStatus'},
        ],
    }
    const pm_site_contractor_work = {
        columns: [
            {dataIndex: 'contractorName'},
            {dataIndex: 'constructTeamName'},
            {dataIndex: 'respSignDate'},
            {dataIndex: 'respEndDate'},
            {dataIndex: 'uscCode'},
            {dataIndex: 'businessLicense'},
            {dataIndex: 'specialLicense'},
            {dataIndex: 'constructionLeader'},
            {dataIndex: 'constructionLeaderTel'},
            {dataIndex: 'constructionLeaderIdent'},
            {dataIndex: 'safetyManager'},
            {dataIndex: 'safetyManagerPhone'},
            {dataIndex: 'safetyManagerId'},
            {dataIndex: 'inFactoryDate'},
            {dataIndex: 'examDate'},
            {dataIndex: 'constructionIntroduction'},
            {dataIndex: 'blackList', enum: 'yes_no'},
        ],
    }
    const pm_site_contractor_break_rule = {
        columns: [
            {dataIndex: 'contractorName'},
            {dataIndex: 'projectName'},
            {dataIndex: 'breakRuleDate'},
            {dataIndex: 'handleResult'},
            {dataIndex: 'breakRuleName'},
        ],
    }
    const pm_site_contractor_certification = {
        columns: [
            {dataIndex: 'contractorName'},
            {dataIndex: 'certiName'},
            {dataIndex: 'certiCode'},
            {dataIndex: 'recheckDate'},
            {dataIndex: 'recheckPeriod'},
            {dataIndex: 'nextRecheckDate'},
            {dataIndex: 'certAttachment', link: 'txt'},
            {dataIndex: 'workSafetyRole', enum: 'work_safety_role'},
        ],
    }
    const pm_site_contractor_worker = {
        columns: [
            {dataIndex: 'contractorName'},
            {dataIndex: 'ctrWorkerName'},
            {dataIndex: 'gender', enum: 'gender'},
            {dataIndex: 'mobile'},
            {dataIndex: 'idNo'},
            {dataIndex: 'education', enum: 'grade_degree'},
            {dataIndex: 'photo', link: 'pic'},
            {dataIndex: 'presenceAbsence', enum: 'presence_absence'},
            {dataIndex: 'ctrDepartment'},
            {dataIndex: 'ctrLiablePerson'},
            {dataIndex: 'ctrIntTime'},
            {dataIndex: 'ctrEffTime'},
            {dataIndex: 'isOverDue', enum: 'yes_no'},
            {dataIndex: 'attach', link: 'txt'},
        ],
        childTables: [
            'pm_site_contractor_worker_certification',
        ]
    }
    const pm_site_contractor_worker_certification = {
        columns: [
            {dataIndex: 'contractorName'},
            {dataIndex: 'ctrWorkerName'},
            {dataIndex: 'certiName'},
            {dataIndex: 'certiCode'},
            {dataIndex: 'recheckDate'},
            {dataIndex: 'recheckPeriod'},
            {dataIndex: 'nextRecheckDate'},
            {dataIndex: 'certAttachment', link: 'txt'},
            {dataIndex: 'workSafetyRole', enum: 'work_safety_role'},
        ],
    }
    const pm_contractor_work_rule_audit = {
        columns: [
            {dataIndex: 'contractorName'},
            {dataIndex: 'workName'},
            {dataIndex: 'workRuleContent'},
            {dataIndex: 'problemAnalysis'},
            {dataIndex: 'improvements'},
            {dataIndex: 'rectifyTime'},
            {dataIndex: 'estimatePerson'},
            {dataIndex: 'estimateTime'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_contractor_work_emergency_audit = {
        columns: [
            {dataIndex: 'contractorName'},
            {dataIndex: 'workName'},
            {dataIndex: 'workPlanContent'},
            {dataIndex: 'problemAnalysis'},
            {dataIndex: 'improvements'},
            {dataIndex: 'rectifyTime'},
            {dataIndex: 'estimatePerson'},
            {dataIndex: 'estimateTime'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_site_supplier = {
        columns: [
            {dataIndex: 'supplierCode'},
            {dataIndex: 'supplierName'},
            {dataIndex: 'supplierCatalog', enum: 'supplier_catalog'},
            {dataIndex: 'supplierRiskLvl'},
            {dataIndex: 'supplierType'},
            {dataIndex: 'businessScope'},
            {dataIndex: 'businessDesc'},
            {dataIndex: 'companyAddress'},
            {dataIndex: 'addressPost'},
            {dataIndex: 'contactPerson'},
            {dataIndex: 'supplierProps'},
            {dataIndex: 'supplierCertificate'},
            {dataIndex: 'certificateCode'},
            {dataIndex: 'certificateExpiryDate'},
            {dataIndex: 'ctrDepartment'},
            {dataIndex: 'ctrLiablePerson'},
            {dataIndex: 'ctrIntTime'},
            {dataIndex: 'supplierTel'},
            {dataIndex: 'supplierMobile'},
            {dataIndex: 'mail'},
            {dataIndex: 'address'},
            {dataIndex: 'businessPractice'},
            {dataIndex: 'legalPerson'},
            {dataIndex: 'legalPersonTel'},
            {dataIndex: 'legalPersonIdent'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'safEnvAttach', link: 'txt'},
            {dataIndex: 'qualificationLevel', enum: 'qualification_level'},
            {dataIndex: 'comprehensiveEvaluation'},
            {dataIndex: 'constructTeamName'},
        ],
        childTables: [
            'pm_site_supplier_assess',
            'pm_site_supplier_certification',
        ]
    }
    const pm_site_supplier_assess = {
        columns: [
            {dataIndex: 'supplierName'},
            {dataIndex: 'title'},
            {dataIndex: 'examDepart'},
            {dataIndex: 'examDate'},
            {dataIndex: 'totalScore'},
            {dataIndex: 'examResult', enum: 'assess_result'},
        ],
    }
    const pm_site_supplier_certification = {
        columns: [
            {dataIndex: 'supplierName'},
            {dataIndex: 'certiName'},
            {dataIndex: 'certiCode'},
            {dataIndex: 'haveDueDate', enum: 'yes_no'},
            {dataIndex: 'getCertDate'},
            {dataIndex: 'dueDate'},
            {dataIndex: 'certAttachment', link: 'txt'},
        ],
    }
    const pm_safety_work_fire = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'workCertiName'},
            {dataIndex: 'workCertiType', enum: 'fire_work_level'},
            {dataIndex: 'applicant'},
            {dataIndex: 'applyDate'},
            {dataIndex: 'applyDepart'},
            {dataIndex: 'fireWorkMethod'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'workLoc'},
            {dataIndex: 'workContent'},
            {dataIndex: 'checkBeforeWork', link: 'pic'},
            {dataIndex: 'checkAfterWork', link: 'pic'},
            {dataIndex: 'otherWork'},
            {dataIndex: 'areaName'},
            {dataIndex: 'operatorType', enum: 'safety_work_operator_type'},
            {dataIndex: 'operatorContractorName'},
            {dataIndex: 'monitorType', enum: 'safety_work_monitor_type'},
            {dataIndex: 'monitorContractorName'},
            {dataIndex: 'applicantLeader'},
            {dataIndex: 'operatorLeader'},
            {dataIndex: 'guardian'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'protectGood'},
            {dataIndex: 'safetyAction'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'maker'},
            {dataIndex: 'safetyTrainer'},
            {dataIndex: 'trainingName'},
            {dataIndex: 'workStatus', enum: 'work_status'},
        ],
        childTables: [
            'pm_safety_work_cert_person',
            'pm_safety_work_check_content',
        ]
    }
    const pm_safety_work_upper_air = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'workCertiName'},
            {dataIndex: 'workCertiType', enum: 'upper_work_certi_type'},
            {dataIndex: 'applicant'},
            {dataIndex: 'applyDate'},
            {dataIndex: 'applyDepart'},
            {dataIndex: 'workHeight'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'workLoc'},
            {dataIndex: 'workContent'},
            {dataIndex: 'checkBeforeWork', link: 'pic'},
            {dataIndex: 'otherWork'},
            {dataIndex: 'areaName'},
            {dataIndex: 'operatorType', enum: 'safety_work_operator_type'},
            {dataIndex: 'operatorContractorName'},
            {dataIndex: 'monitorType', enum: 'safety_work_monitor_type'},
            {dataIndex: 'monitorContractorName'},
            {dataIndex: 'applicantLeader'},
            {dataIndex: 'operatorLeader'},
            {dataIndex: 'guardian'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'protectGood'},
            {dataIndex: 'safetyAction'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'maker'},
            {dataIndex: 'safetyTrainer'},
            {dataIndex: 'trainingName'},
            {dataIndex: 'workStatus', enum: 'work_status'},
        ],
        childTables: [
            'pm_safety_work_cert_person',
            'pm_safety_work_check_content',
        ]
    }
    const pm_safety_work_hoisting = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'workCertiName'},
            {dataIndex: 'workCertiType', enum: 'hoist_work_certi_type'},
            {dataIndex: 'applicant'},
            {dataIndex: 'applyDate'},
            {dataIndex: 'applyDepart'},
            {dataIndex: 'hoistingTool'},
            {dataIndex: 'hoistingWeight'},
            {dataIndex: 'operatorSpecialCerti'},
            {dataIndex: 'commandSpecialCerti'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'workLoc'},
            {dataIndex: 'workContent'},
            {dataIndex: 'checkBeforeWork', link: 'pic'},
            {dataIndex: 'otherWork'},
            {dataIndex: 'areaName'},
            {dataIndex: 'operatorType', enum: 'safety_work_operator_type'},
            {dataIndex: 'operatorContractorName'},
            {dataIndex: 'monitorType', enum: 'safety_work_monitor_type'},
            {dataIndex: 'monitorContractorName'},
            {dataIndex: 'applicantLeader'},
            {dataIndex: 'operatorLeader'},
            {dataIndex: 'guardian'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'protectGood'},
            {dataIndex: 'safetyAction'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'maker'},
            {dataIndex: 'safetyTrainer'},
            {dataIndex: 'trainingName'},
            {dataIndex: 'workStatus', enum: 'work_status'},
        ],
        childTables: [
            'pm_safety_work_cert_person',
            'pm_safety_work_check_content',
        ]
    }
    const pm_safety_work_limit_space = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'workCertiName'},
            {dataIndex: 'applicant'},
            {dataIndex: 'applyDate'},
            {dataIndex: 'applyDepart'},
            {dataIndex: 'spaceUnit'},
            {dataIndex: 'limitSpaceDevice'},
            {dataIndex: 'limitSpaceMaterial'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'workLoc'},
            {dataIndex: 'workContent'},
            {dataIndex: 'checkBeforeWork', link: 'pic'},
            {dataIndex: 'otherWork'},
            {dataIndex: 'areaName'},
            {dataIndex: 'operatorType', enum: 'safety_work_operator_type'},
            {dataIndex: 'operatorContractorName'},
            {dataIndex: 'monitorType', enum: 'safety_work_monitor_type'},
            {dataIndex: 'monitorContractorName'},
            {dataIndex: 'applicantLeader'},
            {dataIndex: 'operatorLeader'},
            {dataIndex: 'guardian'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'protectGood'},
            {dataIndex: 'safetyAction'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'maker'},
            {dataIndex: 'safetyTrainer'},
            {dataIndex: 'trainingName'},
            {dataIndex: 'workStatus', enum: 'work_status'},
        ],
        childTables: [
            'pm_safety_work_cert_person',
            'pm_safety_work_check_content',
        ]
    }
    const pm_safety_work_temporary_electricity = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'workCertiName'},
            {dataIndex: 'applicant'},
            {dataIndex: 'applyDate'},
            {dataIndex: 'applyDepart'},
            {dataIndex: 'linkDevice'},
            {dataIndex: 'workVoltage'},
            {dataIndex: 'devicePower'},
            {dataIndex: 'tempElectReason'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'workLoc'},
            {dataIndex: 'workContent'},
            {dataIndex: 'checkBeforeWork', link: 'pic'},
            {dataIndex: 'otherWork'},
            {dataIndex: 'areaName'},
            {dataIndex: 'operatorType', enum: 'safety_work_operator_type'},
            {dataIndex: 'operatorContractorName'},
            {dataIndex: 'monitorType', enum: 'safety_work_monitor_type'},
            {dataIndex: 'monitorContractorName'},
            {dataIndex: 'applicantLeader'},
            {dataIndex: 'operatorLeader'},
            {dataIndex: 'guardian'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'protectGood'},
            {dataIndex: 'safetyAction'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'maker'},
            {dataIndex: 'safetyTrainer'},
            {dataIndex: 'trainingName'},
            {dataIndex: 'workStatus', enum: 'work_status'},
        ],
        childTables: [
            'pm_safety_work_cert_person',
            'pm_safety_work_check_content',
        ]
    }
    const pm_safety_work_break_ground = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'workCertiName'},
            {dataIndex: 'applicant'},
            {dataIndex: 'applyDate'},
            {dataIndex: 'applyDepart'},
            {dataIndex: 'electricAccessPoint'},
            {dataIndex: 'voltage'},
            {dataIndex: 'breakRoadRange'},
            {dataIndex: 'breakRoadMethod'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'workLoc'},
            {dataIndex: 'workContent'},
            {dataIndex: 'checkBeforeWork', link: 'pic'},
            {dataIndex: 'otherWork'},
            {dataIndex: 'areaName'},
            {dataIndex: 'operatorType', enum: 'safety_work_operator_type'},
            {dataIndex: 'operatorContractorName'},
            {dataIndex: 'monitorType', enum: 'safety_work_monitor_type'},
            {dataIndex: 'monitorContractorName'},
            {dataIndex: 'applicantLeader'},
            {dataIndex: 'operatorLeader'},
            {dataIndex: 'guardian'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'protectGood'},
            {dataIndex: 'safetyAction'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'maker'},
            {dataIndex: 'safetyTrainer'},
            {dataIndex: 'trainingName'},
            {dataIndex: 'workStatus', enum: 'work_status'},
        ],
        childTables: [
            'pm_safety_work_cert_person',
            'pm_safety_work_check_content',
        ]
    }
    const pm_safety_work_block_dredge = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'workCertiName'},
            {dataIndex: 'applicant'},
            {dataIndex: 'applyDate'},
            {dataIndex: 'applyDepart'},
            {dataIndex: 'temperature'},
            {dataIndex: 'pressure'},
            {dataIndex: 'wellMaterial'},
            {dataIndex: 'wellType'},
            {dataIndex: 'wellCode'},
            {dataIndex: 'wellLoc'},
            {dataIndex: 'workDeviceLineName'},
            {dataIndex: 'mainMedium'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'blockBeginTime'},
            {dataIndex: 'blockEndTime'},
            {dataIndex: 'dredgeBeginTime'},
            {dataIndex: 'dredgeEndTime'},
            {dataIndex: 'workLoc'},
            {dataIndex: 'workContent'},
            {dataIndex: 'checkBeforeWork', link: 'pic'},
            {dataIndex: 'otherWork'},
            {dataIndex: 'areaName'},
            {dataIndex: 'operatorType', enum: 'safety_work_operator_type'},
            {dataIndex: 'operatorContractorName'},
            {dataIndex: 'monitorType', enum: 'safety_work_monitor_type'},
            {dataIndex: 'monitorContractorName'},
            {dataIndex: 'applicantLeader'},
            {dataIndex: 'operatorLeader'},
            {dataIndex: 'guardian'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'protectGood'},
            {dataIndex: 'safetyAction'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'maker'},
            {dataIndex: 'safetyTrainer'},
            {dataIndex: 'trainingName'},
            {dataIndex: 'workStatus', enum: 'work_status'},
        ],
        childTables: [
            'pm_safety_work_cert_person',
            'pm_safety_work_check_content',
        ]
    }
    const pm_safety_work_block_road = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'workCertiName'},
            {dataIndex: 'applicant'},
            {dataIndex: 'applyDate'},
            {dataIndex: 'applyDepart'},
            {dataIndex: 'blockRoadReason'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'workLoc'},
            {dataIndex: 'workContent'},
            {dataIndex: 'checkBeforeWork', link: 'pic'},
            {dataIndex: 'otherWork'},
            {dataIndex: 'areaName'},
            {dataIndex: 'operatorType', enum: 'safety_work_operator_type'},
            {dataIndex: 'operatorContractorName'},
            {dataIndex: 'monitorType', enum: 'safety_work_monitor_type'},
            {dataIndex: 'monitorContractorName'},
            {dataIndex: 'applicantLeader'},
            {dataIndex: 'operatorLeader'},
            {dataIndex: 'guardian'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'protectGood'},
            {dataIndex: 'safetyAction'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'maker'},
            {dataIndex: 'safetyTrainer'},
            {dataIndex: 'trainingName'},
            {dataIndex: 'workStatus', enum: 'work_status'},
        ],
        childTables: [
            'pm_safety_work_cert_person',
            'pm_safety_work_check_content',
        ]
    }
    const pm_safety_work_check_template = {
        columns: [
            {dataIndex: 'safetyTempTitle'},
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'safetyTempCatalog'},
            {dataIndex: 'creator'},
            {dataIndex: 'createDate'},
        ],
        childTables: [
            'pm_safety_work_check_template_detail',
        ]
    }
    const pm_safety_work_check_template_detail = {
        columns: [
            {dataIndex: 'safetyTempTitle'},
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'checkId'},
            {dataIndex: 'checkContent'},
        ],
    }
    const pm_safety_work_check_content = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'workCertiName'},
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'examDepart'},
            {dataIndex: 'checker'},
            {dataIndex: 'checkDate'},
            {dataIndex: 'safetyTempTitle'},
            {dataIndex: 'notes'},
            {dataIndex: 'safetyWorkStatus', enum: 'safety_work_status'},
            {dataIndex: 'sitePic', link: 'pic'},
        ],
        childTables: [
            'pm_safety_work_check_content_detail',
        ]
    }
    const pm_safety_work_check_content_detail = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'checkDate'},
            {dataIndex: 'checkId'},
            {dataIndex: 'checkContent'},
            {dataIndex: 'notes'},
            {dataIndex: 'checkResult', enum: 'check_result'},
            {dataIndex: 'hazardCheckCode'},
        ],
    }
    const pm_safety_measure = {
        columns: [
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'safetyMeasure'},
            {dataIndex: 'safetyMeasureType', enum: 'safety_measure_type'},
        ],
    }
    const pm_safety_work_jsa_measure = {
        columns: [
            {dataIndex: 'workStep'},
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'safetyMeasure'},
            {dataIndex: 'safetyMeasureType', enum: 'safety_measure_type'},
        ],
    }
    const pm_safety_work_jsa_apply = {
        columns: [
            {dataIndex: 'jsaApplyCode'},
            {dataIndex: 'jsaApplyDate'},
            {dataIndex: 'holder'},
            {dataIndex: 'workContractor'},
            {dataIndex: 'workLoc'},
            {dataIndex: 'workContent'},
            {dataIndex: 'jsaer'},
        ],
        childTables: [
            'pm_safety_work_jsa_apply_detail',
        ]
    }
    const pm_safety_work_jsa_apply_detail = {
        columns: [
            {dataIndex: 'jsaApplyCode'},
            {dataIndex: 'workStep'},
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'riskIdentification'},
            {dataIndex: 'safetyMeasure'},
        ],
    }
    const pm_safety_work_cert_person = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'personName'},
            {dataIndex: 'role'},
            {dataIndex: 'jobTitleCerti'},
            {dataIndex: 'certiCode'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
        ],
    }
    const pm_safety_work_chemical = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'chemLocationType'},
            {dataIndex: 'chemLocation'},
            {dataIndex: 'chemName'},
            {dataIndex: 'areaType'},
            {dataIndex: 'seqNum'},
        ],
    }
    const pm_safety_work_measure = {
        columns: [
            {dataIndex: 'workCertiCode'},
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'seqNum'},
            {dataIndex: 'safetyMeasure'},
            {dataIndex: 'measureParams'},
        ],
    }
    const js_safety_work_key_job = {
        columns: [
            {dataIndex: 'jobTitle'},
            {dataIndex: 'department'},
            {dataIndex: 'safetyWorkType', enum: 'safety_work_type'},
            {dataIndex: 'workPersonCount'},
            {dataIndex: 'workContent'},
        ],
    }
    const js_safety_work_step_list = {
        columns: [
            {dataIndex: 'workStepName'},
            {dataIndex: 'workStepContent'},
            {dataIndex: 'workStepFrequency'},
            {dataIndex: 'implementUnit'},
            {dataIndex: 'workPosition'},
            {dataIndex: 'notes'},
        ],
    }
    const js_safety_work_guardian = {
        columns: [
            {dataIndex: 'workType', enum: 'safety_work_type'},
            {dataIndex: 'guardianName'},
            {dataIndex: 'guardianIdNo'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_safety_work_warning_sign = {
        columns: [
            {dataIndex: 'warningSignName'},
            {dataIndex: 'warningSignModel'},
            {dataIndex: 'pic', link: 'pic'},
            {dataIndex: 'warningSignType', enum: 'warning_sign_type'},
            {dataIndex: 'location'},
            {dataIndex: 'installDate'},
            {dataIndex: 'installCount'},
            {dataIndex: 'fillPerson'},
            {dataIndex: 'fillDate'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_safety_material = {
        columns: [
            {dataIndex: 'safetyMtlCode'},
            {dataIndex: 'safetyMtlName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'safetyMtlType', enum: 'safety_mtl_type'},
            {dataIndex: 'creatorName'},
            {dataIndex: 'creatorDate'},
            {dataIndex: 'goodUnit'},
            {dataIndex: 'mtlAttr'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'isDisabled', enum: 'yes_no'},
        ],
    }
    const pm_career_health_good_standard = {
        columns: [
            {dataIndex: 'workTitle'},
            {dataIndex: 'creatorDate'},
            {dataIndex: 'creatorName'},
        ],
        childTables: [
            'pm_career_health_good_std_detail',
        ]
    }
    const pm_career_health_good_std_detail = {
        columns: [
            {dataIndex: 'workTitle'},
            {dataIndex: 'safetyMtlCode'},
            {dataIndex: 'healthGoodType'},
            {dataIndex: 'healthGoodModel'},
            {dataIndex: 'count'},
            {dataIndex: 'goodUnit'},
            {dataIndex: 'releasePeriod'},
            {dataIndex: 'periodType', enum: 'check_time_type'},
        ],
        childTables: [
            'pm_career_health_good_std_user_detail',
        ]
    }
    const pm_career_health_good_std_user_detail = {
        columns: [
            {dataIndex: 'laborProtectUser'},
            {dataIndex: 'department'},
            {dataIndex: 'workTitle'},
            {dataIndex: 'safetyMtlCode'},
            {dataIndex: 'healthGoodType'},
            {dataIndex: 'healthGoodModel'},
            {dataIndex: 'periodStartDate'},
            {dataIndex: 'periodEndDate'},
            {dataIndex: 'isAllCollected', enum: 'yes_no'},
            {dataIndex: 'periodGetCount'},
            {dataIndex: 'lastPeriodLeftCount'},
            {dataIndex: 'periodCount'},
            {dataIndex: 'periodCollectedCount'},
            {dataIndex: 'periodNotCollectedCount'},
        ],
    }
    const pm_demand_plan_labour_protect = {
        columns: [
            {dataIndex: 'demandPlanCode'},
            {dataIndex: 'demandPlanDesc'},
            {dataIndex: 'fillMan'},
            {dataIndex: 'fillManDept'},
            {dataIndex: 'requestDate'},
            {dataIndex: 'remarks'},
        ],
        childTables: [
            'pm_demand_plan_labour_protect_detail',
        ]
    }
    const pm_demand_plan_labour_protect_detail = {
        columns: [
            {dataIndex: 'demandPlanCode'},
            {dataIndex: 'laborProtectUser'},
            {dataIndex: 'department'},
            {dataIndex: 'workTitle'},
            {dataIndex: 'safetyMtlCode'},
            {dataIndex: 'healthGoodType'},
            {dataIndex: 'healthGoodModel'},
            {dataIndex: 'applyCount'},
            {dataIndex: 'latestGetTime'},
            {dataIndex: 'thisRequestTime'},
        ],
    }
    const pm_career_health_attention = {
        columns: [
            {dataIndex: 'department'},
            {dataIndex: 'jobTitle'},
            {dataIndex: 'careerHealthFactor'},
            {dataIndex: 'careerHealthForbid'},
            {dataIndex: 'careerHealthHazard'},
            {dataIndex: 'careerHealthAction'},
        ],
    }
    const pm_career_health_report = {
        columns: [
            {dataIndex: 'careerHarzardType'},
            {dataIndex: 'careerHarzardName'},
            {dataIndex: 'checkTestOrg'},
            {dataIndex: 'testDate'},
            {dataIndex: 'testResultCode'},
            {dataIndex: 'nextTestDate'},
            {dataIndex: 'testResult'},
            {dataIndex: 'testAddr'},
            {dataIndex: 'testReport', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_career_health_dis_report = {
        columns: [
            {dataIndex: 'healthCheckDate'},
            {dataIndex: 'hospital'},
            {dataIndex: 'healthCheckCount'},
            {dataIndex: 'healthCheckResult'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_career_health_check = {
        columns: [
            {dataIndex: 'employeeName'},
            {dataIndex: 'employeeNo'},
            {dataIndex: 'gender', enum: 'gender'},
            {dataIndex: 'mobile'},
            {dataIndex: 'department'},
            {dataIndex: 'healthCheckTime'},
            {dataIndex: 'healthCheckResult'},
            {dataIndex: 'healthCheckStatus', enum: 'health_check_status'},
            {dataIndex: 'recordCode'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_change_request = {
        columns: [
            {dataIndex: 'changeCode'},
            {dataIndex: 'changeProject'},
            {dataIndex: 'projectCode'},
            {dataIndex: 'changeCatalog', enum: 'change_catalog'},
            {dataIndex: 'applicant'},
            {dataIndex: 'applicantCeriCode'},
            {dataIndex: 'applyDepart'},
            {dataIndex: 'applyDate'},
            {dataIndex: 'changeContentDesc'},
            {dataIndex: 'changeReason'},
            {dataIndex: 'hazardIdentRiskAssess'},
            {dataIndex: 'riskAnalysisControlAction'},
            {dataIndex: 'departLeaderOpinion'},
            {dataIndex: 'majorDepartOpinion'},
            {dataIndex: 'implementPersonOpinion'},
            {dataIndex: 'cpmpanyLeaderOpinion'},
            {dataIndex: 'changeStatus', enum: 'change_status'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'isRepeatIdentify', enum: 'yes_no'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'areaName'},
            {dataIndex: 'applicantDuty'},
            {dataIndex: 'changeDesign', link: 'txt'},
        ],
    }
    const pm_change_acceptance = {
        columns: [
            {dataIndex: 'acceptCode'},
            {dataIndex: 'changeCode'},
            {dataIndex: 'changeProject'},
            {dataIndex: 'changeDepart'},
            {dataIndex: 'acceptDepart'},
            {dataIndex: 'acceptDate'},
            {dataIndex: 'acceptPerson'},
            {dataIndex: 'acceptPersonDepart'},
            {dataIndex: 'acceptPersonDuty'},
            {dataIndex: 'acceptOpinion'},
            {dataIndex: 'majorDepartOpinion'},
            {dataIndex: 'communicateDepart'},
            {dataIndex: 'communicateOpinion'},
            {dataIndex: 'departLeaderOpinion'},
            {dataIndex: 'cpmpanyLeaderOpinion'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'changeAreaName'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'applicant'},
            {dataIndex: 'applyDate'},
            {dataIndex: 'acceptResultStatus', enum: 'verify_status'},
            {dataIndex: 'acceptReport', link: 'txt'},
        ],
    }
    const pm_emergency_plan = {
        columns: [
            {dataIndex: 'emergencyPlanCode'},
            {dataIndex: 'emergencyPlanName'},
            {dataIndex: 'publishDept'},
            {dataIndex: 'implementDate'},
            {dataIndex: 'lastActiveDate'},
            {dataIndex: 'areaName'},
            {dataIndex: 'maker'},
            {dataIndex: 'makeDepart'},
            {dataIndex: 'emergencyPlanAttach', link: 'txt'},
        ],
        childTables: [
            'pm_emergency_plan_active',
        ]
    }
    const pm_emergency_plan_active = {
        columns: [
            {dataIndex: 'emergencyPlanCode'},
            {dataIndex: 'emergencyPlanName'},
            {dataIndex: 'activeDate'},
        ],
    }
    const pm_emergency_plan_record = {
        columns: [
            {dataIndex: 'registerRecordCode'},
            {dataIndex: 'unitName'},
            {dataIndex: 'unitAddress'},
            {dataIndex: 'recordPerson'},
            {dataIndex: 'contactMethod'},
            {dataIndex: 'emergencyPlanName'},
            {dataIndex: 'approveOrg'},
            {dataIndex: 'approveDate'},
            {dataIndex: 'registerRecordAttach', link: 'txt'},
        ],
    }
    const pm_emergency_practice = {
        columns: [
            {dataIndex: 'emergencyPracticeCode'},
            {dataIndex: 'emergencyPlanCode'},
            {dataIndex: 'emergencyPlanName'},
            {dataIndex: 'practiceName'},
            {dataIndex: 'practicePlanDate'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'planMaker'},
            {dataIndex: 'practiceOrganizer'},
            {dataIndex: 'mainPracticeStaff'},
            {dataIndex: 'practAttach', link: 'txt'},
            {dataIndex: 'notes'},
            {dataIndex: 'practiceDate'},
            {dataIndex: 'practiceLoc'},
        ],
    }
    const pm_emergency_assess = {
        columns: [
            {dataIndex: 'emergencyAssessCode'},
            {dataIndex: 'emergencyPracticeCode'},
            {dataIndex: 'practiceName'},
            {dataIndex: 'practiceDate'},
            {dataIndex: 'practiceLoc'},
            {dataIndex: 'practiceChairman'},
            {dataIndex: 'practiceOrganizer'},
            {dataIndex: 'mainPracticeStaff'},
            {dataIndex: 'practiceContent'},
            {dataIndex: 'practiceTarget'},
            {dataIndex: 'practiceProcess'},
            {dataIndex: 'practiceSummary'},
            {dataIndex: 'factorDesc'},
            {dataIndex: 'isRectify', enum: 'yes_no'},
            {dataIndex: 'currentQuest'},
            {dataIndex: 'needToChangePlan', enum: 'yes_no'},
            {dataIndex: 'changeContent'},
            {dataIndex: 'evaluateOpinion'},
            {dataIndex: 'evaluateStatus', enum: 'remark_status'},
            {dataIndex: 'evaluatePerson'},
            {dataIndex: 'evaluateDept'},
            {dataIndex: 'evaluateTime'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'hazardCheckCode'},
        ],
    }
    const pm_emergency_material = {
        columns: [
            {dataIndex: 'materialCode'},
            {dataIndex: 'materialName'},
            {dataIndex: 'department'},
            {dataIndex: 'reserveLoc'},
            {dataIndex: 'measureUnit'},
            {dataIndex: 'count'},
            {dataIndex: 'produceDate'},
            {dataIndex: 'materialUse'},
            {dataIndex: 'useIntroduction', link: 'txt'},
            {dataIndex: 'liablePerson'},
        ],
    }
    const pm_emergency_material_check_std = {
        columns: [
            {dataIndex: 'materialName'},
            {dataIndex: 'makeDate'},
            {dataIndex: 'formulatier'},
            {dataIndex: 'notes'},
        ],
        childTables: [
            'pm_emergency_material_check_std_content',
        ]
    }
    const pm_emergency_material_check_std_content = {
        columns: [
            {dataIndex: 'materialName'},
            {dataIndex: 'checkItem'},
            {dataIndex: 'checkItemCode'},
            {dataIndex: 'checkMethod'},
            {dataIndex: 'checkStandard'},
        ],
    }
    const pm_emergency_material_check_plan = {
        columns: [
            {dataIndex: 'checkPlanName'},
            {dataIndex: 'checkCycleTime'},
            {dataIndex: 'checkCycleTimeType', enum: 'check_time_type'},
            {dataIndex: 'planStartDate'},
            {dataIndex: 'planEndDate'},
            {dataIndex: 'checkedDepart'},
        ],
    }
    const pm_emergency_material_check_record = {
        columns: [
            {dataIndex: 'checkNo'},
            {dataIndex: 'checkDate'},
            {dataIndex: 'checkedDepart'},
            {dataIndex: 'checkTaskType', enum: 'check_task_type'},
            {dataIndex: 'materialName'},
            {dataIndex: 'checkPlanName'},
        ],
        childTables: [
            'pm_emergency_material_check_record_detail',
        ]
    }
    const pm_emergency_material_check_record_detail = {
        columns: [
            {dataIndex: 'checkNo'},
            {dataIndex: 'checkDate'},
            {dataIndex: 'checkTaskType', enum: 'check_task_type'},
            {dataIndex: 'materialCode'},
            {dataIndex: 'department'},
            {dataIndex: 'materialName'},
            {dataIndex: 'checker'},
            {dataIndex: 'checkItemCode'},
            {dataIndex: 'checkItem'},
            {dataIndex: 'checkMethod'},
            {dataIndex: 'checkStandard'},
            {dataIndex: 'checkResult', enum: 'check_result'},
            {dataIndex: 'checkPic', link: 'pic'},
            {dataIndex: 'checkResultDesc'},
            {dataIndex: 'hazardCheckCode'},
        ],
    }
    const pm_emergency_team = {
        columns: [
            {dataIndex: 'teamName'},
            {dataIndex: 'teamLevel', enum: 'team_level'},
            {dataIndex: 'teamLeader'},
            {dataIndex: 'leaderDepart'},
            {dataIndex: 'leaderMobile'},
            {dataIndex: 'leaderTel'},
            {dataIndex: 'teamDesc'},
            {dataIndex: 'teamAddress'},
            {dataIndex: 'teamShift'},
            {dataIndex: 'teamRescueType', enum: 'team_rescue_type'},
            {dataIndex: 'teamType', enum: 'team_type'},
            {dataIndex: 'teamEquipDesc'},
            {dataIndex: 'attach', link: 'txt'},
        ],
        childTables: [
            'pm_emergency_team_member',
        ]
    }
    const pm_emergency_team_member = {
        columns: [
            {dataIndex: 'teamName'},
            {dataIndex: 'personName'},
            {dataIndex: 'personGender', enum: 'gender'},
            {dataIndex: 'personMobile'},
            {dataIndex: 'personDuty'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_accident_snapshot = {
        columns: [
            {dataIndex: 'accidReportCode'},
            {dataIndex: 'accidName'},
            {dataIndex: 'accidDepart'},
            {dataIndex: 'accidType', enum: 'accid_type'},
            {dataIndex: 'accidLoc'},
            {dataIndex: 'accidTime'},
            {dataIndex: 'accidReason', enum: 'accid_reason'},
            {dataIndex: 'accidDesc'},
            {dataIndex: 'accidReasonAna'},
            {dataIndex: 'accidAttach', link: 'txt'},
            {dataIndex: 'reportPerson'},
        ],
    }
    const pm_accident_report = {
        columns: [
            {dataIndex: 'accidReportCode'},
            {dataIndex: 'accidName'},
            {dataIndex: 'accidDepart'},
            {dataIndex: 'accidLoc'},
            {dataIndex: 'accidTime'},
            {dataIndex: 'accidReason', enum: 'accid_reason'},
            {dataIndex: 'accidLev', enum: 'accid_lev'},
            {dataIndex: 'accidType', enum: 'accid_type'},
            {dataIndex: 'reportPerson'},
            {dataIndex: 'reportPersonId'},
            {dataIndex: 'areaName'},
            {dataIndex: 'accidPic', link: 'pic'},
            {dataIndex: 'personInjDetail'},
            {dataIndex: 'fireLossAffect'},
            {dataIndex: 'hazardLeakAffect'},
            {dataIndex: 'deviceAcciAffect'},
            {dataIndex: 'routingAcciAffect'},
            {dataIndex: 'accidDesc'},
            {dataIndex: 'accidFind'},
            {dataIndex: 'reformMeasure'},
            {dataIndex: 'rectifyLiablePerson'},
            {dataIndex: 'rectifyLiablePersonId'},
            {dataIndex: 'suggFinishDate'},
            {dataIndex: 'liablePersonResult'},
            {dataIndex: 'approveOpinion'},
            {dataIndex: 'snapshotAttach', link: 'txt'},
            {dataIndex: 'accidLink', link: 'txt'},
            {dataIndex: 'accidAnalyse', link: 'txt'},
            {dataIndex: 'investReport', link: 'txt'},
            {dataIndex: 'accidResult'},
            {dataIndex: 'reasonAnalyse'},
            {dataIndex: 'reasonAnalyseDirect'},
            {dataIndex: 'reasonAnalyseIndirect'},
            {dataIndex: 'rectifyMeasures'},
            {dataIndex: 'accidResolve'},
            {dataIndex: 'fillDate'},
            {dataIndex: 'putDown'},
            {dataIndex: 'meetingMinites'},
            {dataIndex: 'otherInfo'},
            {dataIndex: 'hazardCheckCode'},
        ],
    }
    const pm_accident_work_injury = {
        columns: [
            {dataIndex: 'injuryReportCode'},
            {dataIndex: 'accidReportCode'},
            {dataIndex: 'reportorName'},
            {dataIndex: 'reportorDepart'},
            {dataIndex: 'reportorGender', enum: 'gender'},
            {dataIndex: 'reportorId'},
            {dataIndex: 'accidName'},
            {dataIndex: 'accidTime'},
            {dataIndex: 'jobInjury', enum: 'job_injury'},
            {dataIndex: 'reportorDate'},
            {dataIndex: 'lossWorkingHour'},
            {dataIndex: 'hospitalName'},
            {dataIndex: 'doctorResult'},
            {dataIndex: 'attentionItem'},
            {dataIndex: 'materialIsReady', enum: 'yes_no'},
            {dataIndex: 'notes'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_mhm_access_device = {
        columns: [
            {dataIndex: 'accessDevicePos'},
            {dataIndex: 'accessDeviceName'},
            {dataIndex: 'accessDeviceStatus', enum: 'device_run_status'},
            {dataIndex: 'targetDevicePos'},
            {dataIndex: 'targetDeviceName'},
            {dataIndex: 'deviceMonitorIndex', enum: 'device_indicator_type'},
            {dataIndex: 'belongRouting'},
            {dataIndex: 'isHazardRouting', enum: 'yes_no'},
            {dataIndex: 'majorHazardName'},
        ],
    }
    const pm_mhm_data_collection_device = {
        columns: [
            {dataIndex: 'gatewayCode'},
            {dataIndex: 'gatewayName'},
            {dataIndex: 'supplierName'},
            {dataIndex: 'gatewayType', enum: 'gateway_type'},
            {dataIndex: 'gatewaySn'},
            {dataIndex: 'installDate'},
            {dataIndex: 'collectFrequence'},
        ],
    }
    const pm_tech_device_alert = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'deviceMonitorIndex', enum: 'device_indicator_type'},
            {dataIndex: 'measureUpper'},
            {dataIndex: 'measureLower'},
            {dataIndex: 'alertUpper'},
            {dataIndex: 'alertUpperUpper'},
            {dataIndex: 'alertLower'},
            {dataIndex: 'alertLowerLower'},
            {dataIndex: 'measureUnit'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_basic_major_hazard = {
        columns: [
            {dataIndex: 'majorHazardCode'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'hazardLevel', enum: 'major_hazard_grade'},
            {dataIndex: 'svalue'},
            {dataIndex: 'rvalue'},
            {dataIndex: 'adjustAlpha'},
            {dataIndex: 'areaName'},
            {dataIndex: 'department'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'liablePersonTel'},
            {dataIndex: 'majorHazardType', enum: 'major_hazard_type'},
            {dataIndex: 'detailAddress'},
            {dataIndex: 'regionCode'},
            {dataIndex: 'majorHazardDetail'},
            {dataIndex: 'useStartDate'},
            {dataIndex: 'relatedHazardRouting'},
            {dataIndex: 'pressContainerCount'},
            {dataIndex: 'relatedHazardChemical'},
            {dataIndex: 'hazardChemicalCount'},
            {dataIndex: 'contacts'},
            {dataIndex: 'contactsTel'},
            {dataIndex: 'minDistanceProtect'},
            {dataIndex: 'surrPeopleNum'},
            {dataIndex: 'isInChemPark', enum: 'yes_no'},
            {dataIndex: 'chemParkName'},
        ],
        childTables: [
            'pm_basic_major_hazard_chem',
        ]
    }
    const pm_basic_major_hazard_chem = {
        columns: [
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'chemName'},
            {dataIndex: 'alias'},
            {dataIndex: 'casNo'},
            {dataIndex: 'chemType', enum: 'chem_type'},
            {dataIndex: 'chemCategory'},
            {dataIndex: 'chemSymbol'},
            {dataIndex: 'designStorage'},
            {dataIndex: 'threshold'},
            {dataIndex: 'qvalue'},
            {dataIndex: 'adjustBeta'},
        ],
    }
    const pm_mhm_realtime_data = {
        columns: [
            {dataIndex: 'projNodeId'},
            {dataIndex: 'tagName'},
            {dataIndex: 'deviceMonitorIndex', enum: 'device_indicator_type'},
            {dataIndex: 'logDate'},
            {dataIndex: 'logTime'},
            {dataIndex: 'lastValue'},
            {dataIndex: 'mainId'},
            {dataIndex: 'occurTime'},
        ],
    }
    const pm_mhm_realtime_data_summary = {
        columns: [
            {dataIndex: 'tagName'},
            {dataIndex: 'deviceMonitorIndex', enum: 'device_indicator_type'},
            {dataIndex: 'logDate'},
            {dataIndex: 'maxValue'},
            {dataIndex: 'minValue'},
            {dataIndex: 'avgValue'},
        ],
    }
    const pm_mhm_realtime_data_backup = {
        columns: [
            {dataIndex: 'backupDate'},
            {dataIndex: 'backupPath'},
            {dataIndex: 'backupDataSize'},
            {dataIndex: 'backupStatus', enum: 'op_status'},
        ],
    }
    const pm_video_config = {
        columns: [
            {dataIndex: 'videoName'},
            {dataIndex: 'videoDeviceMfg', enum: 'video_device_mfg'},
            {dataIndex: 'videoLineIp'},
            {dataIndex: 'videoLinePort'},
            {dataIndex: 'videoUsername'},
            {dataIndex: 'videoPassword'},
            {dataIndex: 'videoChannel'},
            {dataIndex: 'rtspStream'},
            {dataIndex: 'flvStream'},
            {dataIndex: 'videoLineIpBack'},
            {dataIndex: 'videoLinePortBack'},
            {dataIndex: 'videoUsernameBack'},
            {dataIndex: 'videoPasswordBack'},
            {dataIndex: 'videoChannelBack'},
            {dataIndex: 'rtspStreamBack'},
            {dataIndex: 'flvStreamBack'},
            {dataIndex: 'mapShow', enum: 'yes_no'},
            {dataIndex: 'normalStatus', enum: 'normal_status'},
            {dataIndex: 'isLivePlay', enum: 'yes_no'},
            {dataIndex: 'areaName'},
            {dataIndex: 'areaType'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'majorHazardCode'},
        ],
    }
    const pm_tech_device_alert_info = {
        columns: [
            {dataIndex: 'tagName'},
            {dataIndex: 'targetDevicePos'},
            {dataIndex: 'targetDeviceName'},
            {dataIndex: 'occurTime'},
            {dataIndex: 'lastValue'},
            {dataIndex: 'alertPriority', enum: 'device_alert_priority'},
            {dataIndex: 'alertMsg'},
        ],
    }
    const pm_tech_device_alert_info_snapshot = {
        columns: [
            {dataIndex: 'tagName'},
            {dataIndex: 'targetDevicePos'},
            {dataIndex: 'targetDeviceName'},
            {dataIndex: 'latestOccurTime'},
            {dataIndex: 'lastValue'},
            {dataIndex: 'alertPriority', enum: 'device_alert_priority'},
            {dataIndex: 'alertMsg'},
            {dataIndex: 'firstOccurTime'},
            {dataIndex: 'deviceMonitorIndex', enum: 'device_indicator_type'},
            {dataIndex: 'belongRouting'},
            {dataIndex: 'isHazardRouting', enum: 'yes_no'},
            {dataIndex: 'majorHazardName'},
            {dataIndex: 'status', enum: 'handle_status'},
            {dataIndex: 'handleTime'},
            {dataIndex: 'handleInfo'},
            {dataIndex: 'handler'},
            {dataIndex: 'hazardCheckCode'},
        ],
    }
    const pm_second_door_detail = {
        columns: [
            {dataIndex: 'secondDoorDt'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'inoutDirection', enum: 'inout_direction'},
            {dataIndex: 'personName'},
            {dataIndex: 'vehiclePlateNum'},
            {dataIndex: 'department'},
            {dataIndex: 'accessCardNum'},
        ],
    }
    const pm_second_door_count = {
        columns: [
            {dataIndex: 'secondDoorDt'},
            {dataIndex: 'piCount'},
            {dataIndex: 'pcCount'},
            {dataIndex: 'peCount'},
            {dataIndex: 'vehicleCount'},
            {dataIndex: 'secondDoorId'},
        ],
    }
    const pm_risk_judge_group = {
        columns: [
            {dataIndex: 'groupName'},
            {dataIndex: 'shopFloorName'},
            {dataIndex: 'reportPerson'},
            {dataIndex: 'reportTime'},
            {dataIndex: 'groupCol1', enum: 'yes_no'},
            {dataIndex: 'groupCol2', enum: 'yes_no'},
            {dataIndex: 'groupCol3', enum: 'yes_no'},
            {dataIndex: 'groupCol4', enum: 'yes_no'},
            {dataIndex: 'groupCol5', enum: 'yes_no'},
            {dataIndex: 'groupCol6', enum: 'yes_no'},
            {dataIndex: 'groupCol7', enum: 'yes_no'},
            {dataIndex: 'groupCol8', enum: 'yes_no'},
            {dataIndex: 'groupCol9', enum: 'yes_no'},
            {dataIndex: 'groupCol10', enum: 'yes_no'},
            {dataIndex: 'groupCol11', enum: 'yes_no'},
            {dataIndex: 'groupCol12', enum: 'yes_no'},
            {dataIndex: 'groupCol13', enum: 'yes_no'},
            {dataIndex: 'groupCol14', enum: 'yes_no'},
            {dataIndex: 'groupCol15', enum: 'yes_no'},
            {dataIndex: 'groupCol16', enum: 'yes_no'},
            {dataIndex: 'groupCol17'},
        ],
    }
    const pm_risk_judge_shop_floor = {
        columns: [
            {dataIndex: 'shopFloorName'},
            {dataIndex: 'reportPerson'},
            {dataIndex: 'reportTime'},
        ],
        childTables: [
            'pm_risk_judge_shop_floor_group',
            'pm_risk_judge_shop_floor_detail',
        ]
    }
    const pm_risk_judge_shop_floor_group = {
        columns: [
            {dataIndex: 'shopFloorName'},
            {dataIndex: 'reportTime'},
            {dataIndex: 'groupName'},
            {dataIndex: 'groupReportTime'},
        ],
    }
    const pm_risk_judge_shop_floor_detail = {
        columns: [
            {dataIndex: 'shopFloorName'},
            {dataIndex: 'reportTime'},
            {dataIndex: 'equipmentName'},
            {dataIndex: 'equipmentStatus', enum: 'device_status'},
            {dataIndex: 'isStartStop', enum: 'yes_no'},
            {dataIndex: 'specialFire'},
            {dataIndex: 'levelOneFire'},
            {dataIndex: 'levelTwoFire'},
            {dataIndex: 'limitSpace'},
            {dataIndex: 'isUnderControl', enum: 'yes_no'},
        ],
    }
    const pm_risk_judge_company = {
        columns: [
            {dataIndex: 'entprName'},
            {dataIndex: 'reportPerson'},
            {dataIndex: 'department'},
            {dataIndex: 'fillTime'},
            {dataIndex: 'reportTime'},
            {dataIndex: 'equipmentNum'},
            {dataIndex: 'equipmentRunningNum'},
            {dataIndex: 'equipmentStopNum'},
            {dataIndex: 'equipmentMaintainNum'},
            {dataIndex: 'specialFireNum'},
            {dataIndex: 'levelOneFireNum'},
            {dataIndex: 'levelTwoFireNum'},
            {dataIndex: 'limitSpaceNum'},
            {dataIndex: 'isPreproduce', enum: 'yes_no'},
            {dataIndex: 'isStartStop', enum: 'yes_no'},
            {dataIndex: 'isUnderControl', enum: 'yes_no'},
        ],
        childTables: [
            'pm_risk_judge_company_shop_floor',
        ]
    }
    const pm_risk_judge_company_shop_floor = {
        columns: [
            {dataIndex: 'entprName'},
            {dataIndex: 'fillTime'},
            {dataIndex: 'shopFloorName'},
            {dataIndex: 'shopFloorReportTime'},
        ],
    }
    const pm_risk_judge_report = {
        columns: [
            {dataIndex: 'entprName'},
            {dataIndex: 'promiser'},
            {dataIndex: 'promiseDate'},
            {dataIndex: 'promiseContent'},
            {dataIndex: 'totalDeviceCount'},
            {dataIndex: 'runningDeviceCount'},
            {dataIndex: 'stopDeviceCount'},
            {dataIndex: 'maintainDeviceCount'},
            {dataIndex: 'workFireLevel2Count'},
            {dataIndex: 'workFireLevel1Count'},
            {dataIndex: 'workFireSpecialCount'},
            {dataIndex: 'workBlockRoadCount'},
            {dataIndex: 'workBreakGroundCount'},
            {dataIndex: 'workUpperAirCount'},
            {dataIndex: 'workTemporaryElectricityCount'},
            {dataIndex: 'workHoistingCount'},
            {dataIndex: 'workWellDredgeCount'},
            {dataIndex: 'workLimitSpaceCount'},
            {dataIndex: 'isContractWork', enum: 'yes_no'},
            {dataIndex: 'isPreproduce', enum: 'yes_no'},
            {dataIndex: 'isStartStop', enum: 'start_stop_status'},
            {dataIndex: 'isInProgress', enum: 'yes_no'},
            {dataIndex: 'isMajorRisk', enum: 'yes_no'},
            {dataIndex: 'riskLevel', enum: 'risk_level'},
            {dataIndex: 'notes'},
            {dataIndex: 'isPublic', enum: 'yes_no'},
        ],
    }
    const pm_work_push_team = {
        columns: [
            {dataIndex: 'employeeName'},
            {dataIndex: 'employeeNo'},
            {dataIndex: 'department'},
            {dataIndex: 'mobile'},
            {dataIndex: 'personDuty'},
        ],
    }
    const pm_basic_area = {
        columns: [
            {dataIndex: 'areaPos'},
            {dataIndex: 'areaName'},
            {dataIndex: 'department'},
            {dataIndex: 'riskLevel', enum: 'risk_level'},
            {dataIndex: 'constRiskLevel', enum: 'risk_level'},
            {dataIndex: 'controlRiskLevel', enum: 'risk_level'},
            {dataIndex: 'adjustedRiskLevel', enum: 'risk_level'},
            {dataIndex: 'adjustedBeginTime'},
            {dataIndex: 'adjustedEndTime'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'liablePersonDepart'},
            {dataIndex: 'liablePersonNo'},
            {dataIndex: 'liablePersonPhone'},
            {dataIndex: 'notes'},
            {dataIndex: 'areaType'},
            {dataIndex: 'evaluateCycle'},
            {dataIndex: 'evaluatePerson'},
            {dataIndex: 'evaluateDate'},
            {dataIndex: 'areaHeight'},
            {dataIndex: 'qrCode'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_risk_point = {
        columns: [
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
            {dataIndex: 'riskPointType', enum: 'risk_point_type'},
            {dataIndex: 'department'},
            {dataIndex: 'areaName'},
            {dataIndex: 'latestEvaluateDate'},
            {dataIndex: 'latestEvaluatePerson'},
            {dataIndex: 'riskLevel', enum: 'risk_level'},
            {dataIndex: 'riskDesc'},
            {dataIndex: 'maybeRisk'},
            {dataIndex: 'reevaluateDate'},
            {dataIndex: 'notes'},
        ],
        childTables: [
            'pm_risk_point_assess',
        ]
    }
    const pm_risk_point_assess = {
        columns: [
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
            {dataIndex: 'department'},
            {dataIndex: 'areaName'},
            {dataIndex: 'evaluateDate'},
            {dataIndex: 'evaluatePerson'},
            {dataIndex: 'riskLevel', enum: 'risk_level'},
            {dataIndex: 'riskDesc'},
            {dataIndex: 'maybeRisk'},
            {dataIndex: 'engMeasures'},
            {dataIndex: 'manageMeasures'},
            {dataIndex: 'trainingMeasures'},
            {dataIndex: 'individualPreventionMeasures'},
            {dataIndex: 'emergencyMeasures'},
            {dataIndex: 'evaluateValue'},
            {dataIndex: 'notes'},
        ],
        childTables: [
            'pm_risk_point_assess_scl',
            'pm_risk_point_assess_jha',
            'pm_risk_point_assess_hazop',
        ]
    }
    const pm_risk_point_assess_scl = {
        columns: [
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
            {dataIndex: 'evaluateDate'},
            {dataIndex: 'seqNum'},
            {dataIndex: 'checkItem'},
            {dataIndex: 'checkStandard'},
            {dataIndex: 'riskLevel', enum: 'risk_level'},
            {dataIndex: 'riskAnalyseMethod', enum: 'risk_analyse_method'},
            {dataIndex: 'lsProbability', enum: 'ls_probability'},
            {dataIndex: 'lsLvalue'},
            {dataIndex: 'lsSeriousness', enum: 'ls_seriousness'},
            {dataIndex: 'lsSvalue'},
            {dataIndex: 'lsRiskValue'},
            {dataIndex: 'lsAssessLevel', enum: 'risk_assess_level'},
            {dataIndex: 'evaluateValue'},
            {dataIndex: 'lecProbability', enum: 'lec_probability'},
            {dataIndex: 'lecLvalue'},
            {dataIndex: 'lecFrequency', enum: 'lec_frequency'},
            {dataIndex: 'lecEvalue'},
            {dataIndex: 'lecSeriousness', enum: 'lec_seriousness'},
            {dataIndex: 'lecCvalue'},
            {dataIndex: 'lecRiskValue'},
            {dataIndex: 'lecAssessLevel', enum: 'risk_assess_level'},
            {dataIndex: 'mesControlMeasure', enum: 'mes_control_measure'},
            {dataIndex: 'mesMvalue'},
            {dataIndex: 'mesFrequency', enum: 'mes_frequency_2'},
            {dataIndex: 'mesEvalue'},
            {dataIndex: 'mesSeriousness', enum: 'mes_seriousness'},
            {dataIndex: 'mesSvalue'},
            {dataIndex: 'mesRiskValue'},
            {dataIndex: 'mesAssessLevel', enum: 'risk_assess_level'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_risk_point_assess_jha = {
        columns: [
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
            {dataIndex: 'evaluateDate'},
            {dataIndex: 'seqNum'},
            {dataIndex: 'workStep'},
            {dataIndex: 'riskLevel', enum: 'risk_level'},
            {dataIndex: 'riskAnalyseMethod', enum: 'risk_analyse_method'},
            {dataIndex: 'lsProbability', enum: 'ls_probability'},
            {dataIndex: 'lsLvalue'},
            {dataIndex: 'lsSeriousness', enum: 'ls_seriousness'},
            {dataIndex: 'lsSvalue'},
            {dataIndex: 'lsRiskValue'},
            {dataIndex: 'lsAssessLevel', enum: 'risk_assess_level'},
            {dataIndex: 'evaluateValue'},
            {dataIndex: 'lecProbability', enum: 'lec_probability'},
            {dataIndex: 'lecLvalue'},
            {dataIndex: 'lecFrequency', enum: 'lec_frequency'},
            {dataIndex: 'lecEvalue'},
            {dataIndex: 'lecSeriousness', enum: 'lec_seriousness'},
            {dataIndex: 'lecCvalue'},
            {dataIndex: 'lecRiskValue'},
            {dataIndex: 'lecAssessLevel', enum: 'risk_assess_level'},
            {dataIndex: 'mesControlMeasure', enum: 'mes_control_measure'},
            {dataIndex: 'mesMvalue'},
            {dataIndex: 'mesFrequency', enum: 'mes_frequency_2'},
            {dataIndex: 'mesEvalue'},
            {dataIndex: 'mesSeriousness', enum: 'mes_seriousness'},
            {dataIndex: 'mesSvalue'},
            {dataIndex: 'mesRiskValue'},
            {dataIndex: 'mesAssessLevel', enum: 'risk_assess_level'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_risk_point_assess_hazop = {
        columns: [
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
            {dataIndex: 'evaluateDate'},
            {dataIndex: 'seqNum'},
            {dataIndex: 'analysisTitle'},
            {dataIndex: 'analysisContent'},
            {dataIndex: 'riskLevel', enum: 'risk_level'},
            {dataIndex: 'riskAnalyseMethod', enum: 'risk_analyse_method'},
            {dataIndex: 'lsProbability', enum: 'ls_probability'},
            {dataIndex: 'lsLvalue'},
            {dataIndex: 'lsSeriousness', enum: 'ls_seriousness'},
            {dataIndex: 'lsSvalue'},
            {dataIndex: 'lsRiskValue'},
            {dataIndex: 'lsAssessLevel', enum: 'risk_assess_level'},
            {dataIndex: 'evaluateValue'},
            {dataIndex: 'lecProbability', enum: 'lec_probability'},
            {dataIndex: 'lecLvalue'},
            {dataIndex: 'lecFrequency', enum: 'lec_frequency'},
            {dataIndex: 'lecEvalue'},
            {dataIndex: 'lecSeriousness', enum: 'lec_seriousness'},
            {dataIndex: 'lecCvalue'},
            {dataIndex: 'lecRiskValue'},
            {dataIndex: 'lecAssessLevel', enum: 'risk_assess_level'},
            {dataIndex: 'mesControlMeasure', enum: 'mes_control_measure'},
            {dataIndex: 'mesMvalue'},
            {dataIndex: 'mesFrequency', enum: 'mes_frequency_2'},
            {dataIndex: 'mesEvalue'},
            {dataIndex: 'mesSeriousness', enum: 'mes_seriousness'},
            {dataIndex: 'mesSvalue'},
            {dataIndex: 'mesRiskValue'},
            {dataIndex: 'mesAssessLevel', enum: 'risk_assess_level'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_risk_analyse_obj = {
        columns: [
            {dataIndex: 'majorHazardCode'},
            {dataIndex: 'nonMajorHazardCode'},
            {dataIndex: 'riskAnalyseObj'},
            {dataIndex: 'objType', enum: 'obj_type'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'respPerson'},
            {dataIndex: 'areaName'},
        ],
        childTables: [
            'pm_risk_analyse_unit',
        ]
    }
    const pm_risk_analyse_unit = {
        columns: [
            {dataIndex: 'riskAnalyseUnit'},
            {dataIndex: 'riskAnalyseObj'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'respPerson'},
            {dataIndex: 'riskLevel', enum: 'risk_level'},
        ],
        childTables: [
            'pm_risk_analyse_event',
        ]
    }
    const pm_risk_analyse_event = {
        columns: [
            {dataIndex: 'riskAnalyseEventCode'},
            {dataIndex: 'riskAnalyseEvent'},
            {dataIndex: 'riskAnalyseUnit'},
            {dataIndex: 'riskAnalyseObj'},
        ],
        childTables: [
            'pm_risk_analyse_measure',
        ]
    }
    const pm_risk_analyse_measure = {
        columns: [
            {dataIndex: 'riskAnalyseEventCode'},
            {dataIndex: 'riskAnalyseEvent'},
            {dataIndex: 'riskAnalyseUnit'},
            {dataIndex: 'riskAnalyseObj'},
            {dataIndex: 'analyseMeasureCatelog'},
            {dataIndex: 'analyseMeasureType'},
            {dataIndex: 'analyseMeasureDesc'},
            {dataIndex: 'hiddenHazardCheckContent'},
            {dataIndex: 'checkCycleTime'},
            {dataIndex: 'checkCycleTimeType', enum: 'check_time_type'},
            {dataIndex: 'checker'},
            {dataIndex: 'jobTitle'},
        ],
    }
    const pm_risk_list_two_control = {
        columns: [
            {dataIndex: 'areaName'},
            {dataIndex: 'riskDesc'},
            {dataIndex: 'allPossibleResult'},
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
            {dataIndex: 'riskLevel', enum: 'risk_level'},
            {dataIndex: 'controlAction'},
            {dataIndex: 'handleSit'},
            {dataIndex: 'controlLevel', enum: 'risk_control_level'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'respDepart'},
            {dataIndex: 'assessDate'},
            {dataIndex: 'auditPerson'},
            {dataIndex: 'auditDate'},
            {dataIndex: 'reevaluateDate'},
            {dataIndex: 'identifyPic', link: 'pic'},
            {dataIndex: 'relatedMaterial', link: 'txt'},
        ],
    }
    const pm_risk_list_two_ident = {
        columns: [
            {dataIndex: 'riskPointCode'},
            {dataIndex: 'riskPointName'},
            {dataIndex: 'areaName'},
            {dataIndex: 'allPotentialRisk'},
            {dataIndex: 'allPossibleAccid'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_risk_card_three_know = {
        columns: [
            {dataIndex: 'knownCardCode'},
            {dataIndex: 'areaName'},
            {dataIndex: 'areaPos'},
            {dataIndex: 'relateJobCode'},
            {dataIndex: 'relateJobTitle'},
            {dataIndex: 'hazardFactor'},
            {dataIndex: 'riskCondition'},
            {dataIndex: 'riskLevel', enum: 'risk_level'},
            {dataIndex: 'riskControlAction'},
            {dataIndex: 'emergencyHandle'},
            {dataIndex: 'internalTel'},
            {dataIndex: 'externalTel'},
            {dataIndex: 'safetyAlertSign', link: 'pic'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_risk_card_three_promise = {
        columns: [
            {dataIndex: 'promiseCode'},
            {dataIndex: 'areaName'},
            {dataIndex: 'areaPos'},
            {dataIndex: 'promiser'},
            {dataIndex: 'promiserCert'},
            {dataIndex: 'directLeader'},
            {dataIndex: 'directLeaderCert'},
            {dataIndex: 'relateJobCode'},
            {dataIndex: 'relateJobTitle'},
            {dataIndex: 'promiseDetail'},
            {dataIndex: 'promiseDate'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_risk_card_three_handle = {
        columns: [
            {dataIndex: 'handleCardCode'},
            {dataIndex: 'areaName'},
            {dataIndex: 'areaPos'},
            {dataIndex: 'handleCardName'},
            {dataIndex: 'relateJobCode'},
            {dataIndex: 'relateJobTitle'},
            {dataIndex: 'acciRisk'},
            {dataIndex: 'happenPlace'},
            {dataIndex: 'acciCharacter'},
            {dataIndex: 'hazardDesc'},
            {dataIndex: 'stepDesc'},
            {dataIndex: 'handleAction'},
            {dataIndex: 'mainLiablePerson'},
            {dataIndex: 'mainLiablePersonCert'},
            {dataIndex: 'attentionItem'},
            {dataIndex: 'internalTel'},
            {dataIndex: 'externalTel'},
            {dataIndex: 'routingDesc'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_hidden_hazard_check_std = {
        columns: [
            {dataIndex: 'checkTitle'},
            {dataIndex: 'hazardCheckType', enum: 'check_type'},
            {dataIndex: 'makeDepart'},
            {dataIndex: 'makeDate'},
            {dataIndex: 'maker'},
            {dataIndex: 'notes'},
        ],
        childTables: [
            'pm_hidden_hazard_check_std_content',
        ]
    }
    const pm_hidden_hazard_check_std_content = {
        columns: [
            {dataIndex: 'checkTitle'},
            {dataIndex: 'checkItem'},
            {dataIndex: 'checkItemCode'},
            {dataIndex: 'checkMethod'},
            {dataIndex: 'checkStandard'},
        ],
    }
    const pm_hidden_hazard_check_plan = {
        columns: [
            {dataIndex: 'checkPlanName'},
            {dataIndex: 'checkPlanType', enum: 'check_type'},
            {dataIndex: 'checkCycleTime'},
            {dataIndex: 'checkCycleTimeType', enum: 'check_time_type'},
            {dataIndex: 'planStartDate'},
            {dataIndex: 'planEndDate'},
            {dataIndex: 'checkTitle'},
            {dataIndex: 'checkedDepart'},
            {dataIndex: 'exceptionInfoPerson'},
            {dataIndex: 'checkers'},
            {dataIndex: 'notes'},
        ],
        childTables: [
            'pm_hidden_hazard_check_plan_detail',
        ]
    }
    const pm_hidden_hazard_check_plan_detail = {
        columns: [
            {dataIndex: 'checkPlanName'},
            {dataIndex: 'checkItemCode'},
            {dataIndex: 'checkTitle'},
            {dataIndex: 'checkItem'},
            {dataIndex: 'checkMethod'},
            {dataIndex: 'checkStandard'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_hidden_hazard_check_list = {
        columns: [
            {dataIndex: 'hazardCheckNo'},
            {dataIndex: 'hazardCheckType', enum: 'check_type'},
            {dataIndex: 'checkDate'},
            {dataIndex: 'checkedDepart'},
            {dataIndex: 'checkGroupMember'},
            {dataIndex: 'checkTaskType', enum: 'check_task_type'},
            {dataIndex: 'checkTitle'},
            {dataIndex: 'checkPlanName'},
        ],
        childTables: [
            'pm_hidden_hazard_check_list_detail',
        ]
    }
    const pm_hidden_hazard_check_list_detail = {
        columns: [
            {dataIndex: 'hazardCheckNo'},
            {dataIndex: 'checkTaskType', enum: 'check_task_type'},
            {dataIndex: 'checkDate'},
            {dataIndex: 'checkedDepart'},
            {dataIndex: 'checkPlanName'},
            {dataIndex: 'checkItemCode'},
            {dataIndex: 'checkTitle'},
            {dataIndex: 'checkItem'},
            {dataIndex: 'checkMethod'},
            {dataIndex: 'checkStandard'},
            {dataIndex: 'checkResult', enum: 'check_result'},
            {dataIndex: 'fillPerson'},
            {dataIndex: 'checkResultDesc'},
            {dataIndex: 'hazardLocation'},
            {dataIndex: 'sitePic', link: 'pic'},
            {dataIndex: 'checkGroupMember'},
            {dataIndex: 'hazardCheckCode'},
        ],
    }
    const js_expert_check_upload = {
        columns: [
            {dataIndex: 'expertName'},
            {dataIndex: 'checkFrequency'},
            {dataIndex: 'serviceStartTime'},
            {dataIndex: 'serviceEndTime'},
            {dataIndex: 'serviceAttach', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const js_expert_check_plan = {
        columns: [
            {dataIndex: 'checkExpert'},
            {dataIndex: 'checkStartTime'},
            {dataIndex: 'checkEndTime'},
            {dataIndex: 'checkContent'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const js_expert_check_record = {
        columns: [
            {dataIndex: 'checkExpert'},
            {dataIndex: 'checkDate'},
            {dataIndex: 'checkContent'},
            {dataIndex: 'findProblem'},
            {dataIndex: 'problemAnalysis'},
            {dataIndex: 'rectifyMeasures'},
            {dataIndex: 'rectifyStatus'},
            {dataIndex: 'rectifyLiablePerson'},
            {dataIndex: 'rectifyFinishDate'},
            {dataIndex: 'expertReviewTime'},
        ],
    }
    const pm_hidden_hazard = {
        columns: [
            {dataIndex: 'hazardCheckCode'},
            {dataIndex: 'hazardCheckOrg'},
            {dataIndex: 'checkResultDesc'},
            {dataIndex: 'hazardPic', link: 'pic'},
            {dataIndex: 'hazardLocation'},
            {dataIndex: 'hazardSource'},
            {dataIndex: 'hazardDepartment'},
            {dataIndex: 'reportPerson'},
            {dataIndex: 'reportTime'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_hidden_hazard_request = {
        columns: [
            {dataIndex: 'hazardCheckCode'},
            {dataIndex: 'moniterCheckPerson'},
            {dataIndex: 'unqualifiedFactor'},
            {dataIndex: 'hazardGrade', enum: 'hazard_grade'},
            {dataIndex: 'checkSourceCatalog', enum: 'check_type'},
            {dataIndex: 'personManageCatalog', enum: 'person_mgt_catalog'},
            {dataIndex: 'happenSegment', enum: 'happen_segment'},
            {dataIndex: 'majorCatalog', enum: 'major_catalog'},
            {dataIndex: 'punishPersonCount'},
            {dataIndex: 'rectifyMethod'},
            {dataIndex: 'rectifyDueDate'},
            {dataIndex: 'rectifyDepart'},
            {dataIndex: 'rectifyLiablePerson'},
            {dataIndex: 'rectifyLiablePersonNo'},
            {dataIndex: 'rectifyRequestPerson'},
            {dataIndex: 'rectifyRequestTime'},
        ],
    }
    const pm_hidden_hazard_rectify = {
        columns: [
            {dataIndex: 'hazardCheckCode'},
            {dataIndex: 'rectifyExplain'},
            {dataIndex: 'hazardRectifyPic', link: 'pic'},
            {dataIndex: 'rectifyFinishDate'},
            {dataIndex: 'isRectifyDelay', enum: 'yes_no'},
            {dataIndex: 'rectifyDelayDays'},
            {dataIndex: 'rectifyDepart'},
            {dataIndex: 'rectifyLiablePerson'},
            {dataIndex: 'rectifyFillTime'},
            {dataIndex: 'rectifyDueDate'},
            {dataIndex: 'reportPerson'},
            {dataIndex: 'reportTime'},
        ],
    }
    const pm_hidden_hazard_rectify_verify = {
        columns: [
            {dataIndex: 'hazardCheckCode'},
            {dataIndex: 'verifyPerson'},
            {dataIndex: 'verifyDate'},
            {dataIndex: 'verifyStatus', enum: 'verify_status'},
            {dataIndex: 'verifyDesc'},
        ],
    }
    const pm_dp_assess_template = {
        columns: [
            {dataIndex: 'assessTemplateName'},
            {dataIndex: 'evaluateScores'},
            {dataIndex: 'excellentScore'},
            {dataIndex: 'goodScore'},
            {dataIndex: 'passScore'},
        ],
        childTables: [
            'pm_dp_assess_template_detail',
        ]
    }
    const pm_dp_assess_template_detail = {
        columns: [
            {dataIndex: 'assessTemplateName'},
            {dataIndex: 'assessItem'},
            {dataIndex: 'assessContent'},
            {dataIndex: 'scoreStandard'},
            {dataIndex: 'scoreValue'},
        ],
    }
    const pm_dp_assess_record = {
        columns: [
            {dataIndex: 'assessCode'},
            {dataIndex: 'assessTime'},
            {dataIndex: 'assessedPerson'},
            {dataIndex: 'assessedDept'},
            {dataIndex: 'examTotalScore'},
            {dataIndex: 'assessReason'},
            {dataIndex: 'assessPerson'},
            {dataIndex: 'estimateParticipant'},
            {dataIndex: 'assessTemplateName'},
        ],
        childTables: [
            'pm_dp_assess_record_detail',
        ]
    }
    const pm_dp_assess_record_detail = {
        columns: [
            {dataIndex: 'assessCode'},
            {dataIndex: 'assessTime'},
            {dataIndex: 'assessedPerson'},
            {dataIndex: 'assessedDept'},
            {dataIndex: 'assessItem'},
            {dataIndex: 'assessContent'},
            {dataIndex: 'scoreStandard'},
            {dataIndex: 'scoreValue'},
            {dataIndex: 'examScore'},
            {dataIndex: 'exitingProblemDesc'},
            {dataIndex: 'safetRiskMeasureDesc'},
            {dataIndex: 'hiddenHazardTaskDesc'},
            {dataIndex: 'mainRespImplementDesc'},
        ],
    }
    const pm_dp_reward_std = {
        columns: [
            {dataIndex: 'assessTemplateName'},
            {dataIndex: 'effectiveDate'},
            {dataIndex: 'disableDate'},
            {dataIndex: 'excellentScoreReward'},
            {dataIndex: 'goodScoreReward'},
        ],
    }
    const pm_dp_reward_record = {
        columns: [
            {dataIndex: 'assessCode'},
            {dataIndex: 'assessTime'},
            {dataIndex: 'assessedPerson'},
            {dataIndex: 'assessedDept'},
            {dataIndex: 'examTotalScore'},
            {dataIndex: 'rewardTime'},
            {dataIndex: 'rewardContent'},
        ],
    }
    const pm_dp_punish_std = {
        columns: [
            {dataIndex: 'assessTemplateName'},
            {dataIndex: 'effectiveDate'},
            {dataIndex: 'disableDate'},
            {dataIndex: 'notPassScorePunish'},
        ],
    }
    const pm_dp_punish_record = {
        columns: [
            {dataIndex: 'assessCode'},
            {dataIndex: 'assessTime'},
            {dataIndex: 'assessedPerson'},
            {dataIndex: 'assessedDept'},
            {dataIndex: 'examTotalScore'},
            {dataIndex: 'punishTime'},
            {dataIndex: 'punishContent'},
        ],
    }
    const pm_basic_device = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'devicePic', link: 'pic'},
            {dataIndex: 'deviceCatalog'},
            {dataIndex: 'useDept'},
            {dataIndex: 'installLoc'},
            {dataIndex: 'deviceCode'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'checkPerson'},
            {dataIndex: 'deviceUseStatus', enum: 'device_status'},
            {dataIndex: 'criticalCatalog', enum: 'critical_catalog'},
            {dataIndex: 'isSpecialDevice', enum: 'yes_no'},
            {dataIndex: 'specialDeviceType'},
            {dataIndex: 'produceFactory'},
            {dataIndex: 'assetCode'},
            {dataIndex: 'produceDate'},
            {dataIndex: 'useStartDate'},
            {dataIndex: 'useYearsLimit'},
            {dataIndex: 'useEndDate'},
            {dataIndex: 'qrCode'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'belongRouting'},
            {dataIndex: 'isHazardRouting', enum: 'yes_no'},
            {dataIndex: 'areaName'},
            {dataIndex: 'mapShow', enum: 'yes_no'},
            {dataIndex: 'videoName'},
        ],
        childTables: [
            'pm_device_check_std',
        ]
    }
    const pm_device_check_std = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'checkItem'},
            {dataIndex: 'checkItemCode'},
            {dataIndex: 'checkMethod'},
            {dataIndex: 'checkStandard'},
            {dataIndex: 'checkPos', link: 'pic'},
            {dataIndex: 'qrCode'},
            {dataIndex: 'checkCycleTime'},
            {dataIndex: 'checkCycleTimeType', enum: 'check_time_type'},
            {dataIndex: 'skipWeekend', enum: 'yes_no'},
            {dataIndex: 'skipHoliday', enum: 'yes_no'},
            {dataIndex: 'lastCheckDate'},
            {dataIndex: 'nextCheckDate'},
            {dataIndex: 'checkPerson'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'deviceUseStatus', enum: 'device_status'},
        ],
    }
    const pm_device_check_record = {
        columns: [
            {dataIndex: 'planStatus', enum: 'device_plan_status'},
            {dataIndex: 'taskOrderTime'},
            {dataIndex: 'checkTaskType', enum: 'check_task_type'},
            {dataIndex: 'checkItemCode'},
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'checkItem'},
            {dataIndex: 'checkMethod'},
            {dataIndex: 'checkStandard'},
            {dataIndex: 'checkPos', link: 'pic'},
            {dataIndex: 'qrCode'},
            {dataIndex: 'checker'},
            {dataIndex: 'checkStartTime'},
            {dataIndex: 'checkEndTime'},
            {dataIndex: 'checkResult', enum: 'check_status'},
            {dataIndex: 'checkPic', link: 'pic'},
            {dataIndex: 'checkException'},
            {dataIndex: 'checkHandle'},
            {dataIndex: 'hazardCheckCode'},
        ],
    }
    const pm_device_mtn_std = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'mntnItem'},
            {dataIndex: 'mntnItemCode'},
            {dataIndex: 'isInternalMntn', enum: 'yes_no'},
            {dataIndex: 'externalUnitName'},
            {dataIndex: 'mntnPerson'},
            {dataIndex: 'mntnContent'},
            {dataIndex: 'qrCode'},
            {dataIndex: 'mntnCycleTime'},
            {dataIndex: 'mntnCycleTimeType', enum: 'check_time_type'},
            {dataIndex: 'mntnStartDate'},
            {dataIndex: 'skipWeekend', enum: 'yes_no'},
            {dataIndex: 'skipHoliday', enum: 'yes_no'},
            {dataIndex: 'lastMntnDate'},
            {dataIndex: 'nextMntnDate'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'deviceUseStatus', enum: 'device_status'},
        ],
    }
    const pm_device_mtn_record = {
        columns: [
            {dataIndex: 'planStatus', enum: 'device_plan_status'},
            {dataIndex: 'taskOrderTime'},
            {dataIndex: 'mntnItemCode'},
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'mntnItem'},
            {dataIndex: 'isInternalMntn', enum: 'yes_no'},
            {dataIndex: 'externalUnitName'},
            {dataIndex: 'mntnPerson'},
            {dataIndex: 'mntnContent'},
            {dataIndex: 'qrCode'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'mntnStartTime'},
            {dataIndex: 'mntnEndTime'},
            {dataIndex: 'mntnResult', enum: 'mtn_status'},
            {dataIndex: 'mntnPic', link: 'pic'},
        ],
    }
    const pm_device_test_std = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'testItem'},
            {dataIndex: 'testItemCode'},
            {dataIndex: 'isInternalTest', enum: 'yes_no'},
            {dataIndex: 'externalUnitName'},
            {dataIndex: 'testPerson'},
            {dataIndex: 'testContent'},
            {dataIndex: 'qrCode'},
            {dataIndex: 'testCycleTime'},
            {dataIndex: 'testCycleTimeType', enum: 'check_time_type'},
            {dataIndex: 'testStartDate'},
            {dataIndex: 'skipWeekend', enum: 'yes_no'},
            {dataIndex: 'skipHoliday', enum: 'yes_no'},
            {dataIndex: 'lastTestDate'},
            {dataIndex: 'nextTestDate'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'deviceUseStatus', enum: 'device_status'},
        ],
    }
    const pm_device_test_record = {
        columns: [
            {dataIndex: 'planStatus', enum: 'device_plan_status'},
            {dataIndex: 'taskOrderTime'},
            {dataIndex: 'testItemCode'},
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'testItem'},
            {dataIndex: 'isInternalTest', enum: 'yes_no'},
            {dataIndex: 'externalUnitName'},
            {dataIndex: 'testPerson'},
            {dataIndex: 'testContent'},
            {dataIndex: 'qrCode'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'testStartTime'},
            {dataIndex: 'testEndTime'},
            {dataIndex: 'testResult', enum: 'check_status'},
            {dataIndex: 'testPic', link: 'pic'},
            {dataIndex: 'checkException'},
            {dataIndex: 'checkHandle'},
            {dataIndex: 'hazardCheckCode'},
        ],
    }
    const pm_device_repair_record = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'exceptionReportTime'},
            {dataIndex: 'deviceExceptionItem'},
            {dataIndex: 'isInternalRepair', enum: 'yes_no'},
            {dataIndex: 'externalUnitName'},
            {dataIndex: 'repairLiablePerson'},
            {dataIndex: 'repairResult', enum: 'fix_status_type'},
            {dataIndex: 'repairDetail'},
            {dataIndex: 'repairStartTime'},
            {dataIndex: 'repairEndTime'},
            {dataIndex: 'liablePerson'},
        ],
    }
    const pm_device_stop_record = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'stopReason'},
            {dataIndex: 'stopAction'},
            {dataIndex: 'stopProposer'},
            {dataIndex: 'stopProposerDate'},
            {dataIndex: 'actualStopDate'},
        ],
    }
    const pm_device_restore_record = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'restoreReason'},
            {dataIndex: 'restoreRequestDate'},
            {dataIndex: 'restoreProposer'},
            {dataIndex: 'actualRestoreDate'},
        ],
    }
    const pm_device_scrap_record = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'scrapReason'},
            {dataIndex: 'scrapRequestDate'},
            {dataIndex: 'scrapProposer'},
            {dataIndex: 'actualScrapDate'},
        ],
    }
    const pm_device_fix_plan = {
        columns: [
            {dataIndex: 'year'},
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'fixCheckItem'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'startTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'department'},
            {dataIndex: 'finishStatus'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_device_fix_five = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'fixCheckItem'},
            {dataIndex: 'fixTime'},
            {dataIndex: 'fixProject'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'fixPerson'},
            {dataIndex: 'fixSafety'},
            {dataIndex: 'acceptPerson'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_device_fix_project = {
        columns: [
            {dataIndex: 'fixTime'},
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'fixCheckRisk'},
            {dataIndex: 'fixCheckContent'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'fixCheckResult'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_device_fix_deliver = {
        columns: [
            {dataIndex: 'fixTime'},
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'fixCheckFinish'},
            {dataIndex: 'fixCheckRiskHandle'},
            {dataIndex: 'projectDeliverer'},
            {dataIndex: 'projectReceiver'},
            {dataIndex: 'provedDeliverer'},
            {dataIndex: 'deliverTime'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_device_key_part = {
        columns: [
            {dataIndex: 'deviceKeyPartName'},
            {dataIndex: 'locDetail'},
            {dataIndex: 'useDept'},
            {dataIndex: 'contactPerson'},
            {dataIndex: 'fillPerson'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'deviceCatalog', enum: 'device_catalog'},
            {dataIndex: 'checkCycleDays'},
            {dataIndex: 'emergencePlan', link: 'txt'},
            {dataIndex: 'hazardFactor'},
            {dataIndex: 'potentialRisk'},
            {dataIndex: 'emergencyMeasures'},
            {dataIndex: 'sitePic', link: 'pic'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_device_pipeline = {
        columns: [
            {dataIndex: 'pipelineCode'},
            {dataIndex: 'pipelineName'},
            {dataIndex: 'transferMaterial'},
            {dataIndex: 'materialForm', enum: 'material_form'},
            {dataIndex: 'transferCap'},
            {dataIndex: 'totalLength'},
            {dataIndex: 'currentStatus', enum: 'device_status'},
            {dataIndex: 'pipelineMaterial'},
            {dataIndex: 'implementMethod', enum: 'implement_method'},
            {dataIndex: 'isPressurePipeline', enum: 'yes_no'},
            {dataIndex: 'pressureLvl', enum: 'pressure_lvl'},
            {dataIndex: 'isChemPipeline', enum: 'yes_no'},
            {dataIndex: 'chemName'},
            {dataIndex: 'casNo'},
            {dataIndex: 'useStartDate'},
            {dataIndex: 'opPressUpper'},
            {dataIndex: 'opPressLower'},
            {dataIndex: 'opTempUpper'},
            {dataIndex: 'opTempLower'},
            {dataIndex: 'minWorkPress'},
            {dataIndex: 'maxWorkPress'},
            {dataIndex: 'minWorkTemp'},
            {dataIndex: 'maxWorkTemp'},
            {dataIndex: 'designPress'},
        ],
    }
    const pm_device_special_valve = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'produceFactory'},
            {dataIndex: 'deviceStatus', enum: 'device_status'},
            {dataIndex: 'deviceMaterial'},
            {dataIndex: 'installLoc'},
            {dataIndex: 'reqPress'},
            {dataIndex: 'pressRange'},
            {dataIndex: 'deviceSn'},
            {dataIndex: 'recheckCode'},
        ],
    }
    const pm_device_special_device = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'internalName'},
            {dataIndex: 'registerCode'},
            {dataIndex: 'usageCode'},
            {dataIndex: 'produceDate'},
            {dataIndex: 'useStartDate'},
            {dataIndex: 'installLoc'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'testPeriod'},
        ],
    }
    const pm_device_instrument_lab = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'deviceName'},
            {dataIndex: 'modelType'},
            {dataIndex: 'testRange'},
            {dataIndex: 'produceFactory'},
            {dataIndex: 'mgmLevel'},
            {dataIndex: 'accuracy'},
            {dataIndex: 'instrumentType'},
            {dataIndex: 'useDept'},
            {dataIndex: 'deviceSn'},
            {dataIndex: 'testDate'},
            {dataIndex: 'testPeriod'},
            {dataIndex: 'nextTestDate'},
            {dataIndex: 'testDept'},
            {dataIndex: 'testCertCode'},
            {dataIndex: 'recordCode'},
            {dataIndex: 'registerDept'},
            {dataIndex: 'testDeviceType', enum: 'test_device_type'},
        ],
    }
    const pm_device_monitor_measure = {
        columns: [
            {dataIndex: 'name'},
            {dataIndex: 'count'},
            {dataIndex: 'mfgSerialNumber'},
            {dataIndex: 'reserveAddr'},
            {dataIndex: 'measureRange'},
            {dataIndex: 'validateDate'},
            {dataIndex: 'mfgBuyTime'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_device_container_emergency = {
        columns: [
            {dataIndex: 'emergencySystemName'},
            {dataIndex: 'belongDeviceContainer'},
            {dataIndex: 'mainFunction'},
            {dataIndex: 'useStartDate'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'attach', link: 'txt'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_produce_stop_plan = {
        columns: [
            {dataIndex: 'produceStopName'},
            {dataIndex: 'produceStopAttach', link: 'txt'},
            {dataIndex: 'fileEditTime'},
            {dataIndex: 'fileMaker'},
            {dataIndex: 'fileAuditor'},
        ],
    }
    const pm_device_special_run = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'specialDeviceName'},
            {dataIndex: 'startupTime'},
            {dataIndex: 'stopTime'},
            {dataIndex: 'runningStatus'},
            {dataIndex: 'operator'},
        ],
    }
    const pm_device_special_issue = {
        columns: [
            {dataIndex: 'devicePos'},
            {dataIndex: 'specialDeviceName'},
            {dataIndex: 'faultName'},
            {dataIndex: 'faultDepartment'},
            {dataIndex: 'faultReason'},
            {dataIndex: 'riskAssessLevel'},
            {dataIndex: 'faultCheckFixMeasures'},
            {dataIndex: 'faultStartTime'},
            {dataIndex: 'faultFinder'},
        ],
    }
    const pm_device_clean = {
        columns: [
            {dataIndex: 'date'},
            {dataIndex: 'cleanObject'},
            {dataIndex: 'cleanMethod'},
            {dataIndex: 'cleanTools'},
            {dataIndex: 'disinfectMethod'},
            {dataIndex: 'disinfectant'},
            {dataIndex: 'operationTime'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'cleanAnalysisTime'},
            {dataIndex: 'cleanAnalysisResult'},
            {dataIndex: 'acceptConclusion'},
            {dataIndex: 'acceptPerson'},
            {dataIndex: 'notes'},
        ],
    }
    const pm_fire_manager = {
        columns: [
            {dataIndex: 'fireManagerType', enum: 'fire_manager_type'},
            {dataIndex: 'employeeName'},
            {dataIndex: 'gender', enum: 'gender'},
            {dataIndex: 'photo', link: 'pic'},
            {dataIndex: 'mobile'},
            {dataIndex: 'idType', enum: 'credit_type'},
            {dataIndex: 'idNo'},
            {dataIndex: 'jobStartTime'},
            {dataIndex: 'jobDesc'},
            {dataIndex: 'fireTraining'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_fire_important_position = {
        columns: [
            {dataIndex: 'importantPosition'},
            {dataIndex: 'importantPositionPic', link: 'pic'},
            {dataIndex: 'theLocation'},
            {dataIndex: 'respPerson'},
            {dataIndex: 'importantPositionDesc'},
            {dataIndex: 'attach', link: 'txt'},
        ],
    }
    const pm_fire_unit_info = {
        columns: [
            {dataIndex: 'unitName'},
            {dataIndex: 'unitAddress'},
            {dataIndex: 'unitCode'},
            {dataIndex: 'unitType'},
            {dataIndex: 'managementUnit'},
            {dataIndex: 'uscCode'},
            {dataIndex: 'unitContact'},
            {dataIndex: 'unitContactTel'},
            {dataIndex: 'fireSafetyP'},
            {dataIndex: 'fireSafetyTel'},
            {dataIndex: 'fireManager'},
            {dataIndex: 'fireManagerTel'},
            {dataIndex: 'longitude'},
            {dataIndex: 'latitude'},
        ],
    }
    const pm_fire_mark = {
        columns: [
            {dataIndex: 'markName'},
            {dataIndex: 'markType', enum: 'mark_type'},
            {dataIndex: 'isInvolve', enum: 'yes_no'},
            {dataIndex: 'markPic', link: 'pic'},
            {dataIndex: 'respPerson'},
            {dataIndex: 'markLocation'},
            {dataIndex: 'locPic', link: 'pic'},
            {dataIndex: 'indicatorDesc'},
        ],
    }
    const pm_fire_check = {
        columns: [
            {dataIndex: 'planStatus', enum: 'device_plan_status'},
            {dataIndex: 'taskOrderTime'},
            {dataIndex: 'checkTaskType', enum: 'check_task_type'},
            {dataIndex: 'ctrlObjectNo'},
            {dataIndex: 'ctrlObject'},
            {dataIndex: 'thingPosition'},
            {dataIndex: 'checker'},
            {dataIndex: 'checkTime'},
            {dataIndex: 'checkResult', enum: 'check_status'},
            {dataIndex: 'sitePic', link: 'pic'},
            {dataIndex: 'checkResultDesc'},
            {dataIndex: 'hazardCheckCode'},
        ],
    }
    const pm_fire_mtn = {
        columns: [
            {dataIndex: 'planStatus', enum: 'device_plan_status'},
            {dataIndex: 'taskOrderTime'},
            {dataIndex: 'ctrlObjectNo'},
            {dataIndex: 'ctrlObject'},
            {dataIndex: 'thingPosition'},
            {dataIndex: 'mtnPerson'},
            {dataIndex: 'mtnTime'},
            {dataIndex: 'mtnResult', enum: 'mtn_status'},
            {dataIndex: 'sitePic', link: 'pic'},
        ],
    }
    const pm_fire_drill = {
        columns: [
            {dataIndex: 'drillCode'},
            {dataIndex: 'drillTitle'},
            {dataIndex: 'drillAddress'},
            {dataIndex: 'beginTime'},
            {dataIndex: 'endTime'},
            {dataIndex: 'drillPersonNum'},
            {dataIndex: 'drillDetail'},
            {dataIndex: 'drillPic', link: 'pic'},
            {dataIndex: 'drillVideo', link: 'vid'},
            {dataIndex: 'commitTime'},
        ],
        childTables: [
            'pm_fire_drill_person',
        ]
    }
    const pm_fire_drill_person = {
        columns: [
            {dataIndex: 'drillCode'},
            {dataIndex: 'drillTitle'},
            {dataIndex: 'employeeName'},
            {dataIndex: 'department'},
            {dataIndex: 'contactMethod'},
            {dataIndex: 'checkinTime'},
        ],
    }
    const pm_fire_report_fire = {
        columns: [
            {dataIndex: 'submitterPosition'},
            {dataIndex: 'createTime'},
            {dataIndex: 'firePosition'},
            {dataIndex: 'fireContent'},
            {dataIndex: 'fireMode'},
            {dataIndex: 'addedBy'},
            {dataIndex: 'contactMethod'},
            {dataIndex: 'fireStartTime'},
            {dataIndex: 'fireEndTime'},
            {dataIndex: 'safetyManager'},
            {dataIndex: 'safetyManagerMobile'},
            {dataIndex: 'constructionUnit'},
            {dataIndex: 'fireWorkManager'},
            {dataIndex: 'fireWorkManagerTel'},
            {dataIndex: 'fireWorker'},
            {dataIndex: 'fireWorkerTel'},
            {dataIndex: 'fireWorkerIdNo'},
            {dataIndex: 'isControl', enum: 'yes_no'},
            {dataIndex: 'controlPic', link: 'pic'},
            {dataIndex: 'controlPic2', link: 'pic'},
            {dataIndex: 'isClear', enum: 'yes_no'},
            {dataIndex: 'clearPic', link: 'pic'},
            {dataIndex: 'havingFireBasin', enum: 'yes_no'},
            {dataIndex: 'fireBasinPic', link: 'pic'},
            {dataIndex: 'firePermit', link: 'pic'},
            {dataIndex: 'fireExtinguisher', link: 'pic'},
            {dataIndex: 'fireHose', link: 'pic'},
            {dataIndex: 'aroundPic', link: 'pic'},
        ],
    }
    const pm_fire_report_construction = {
        columns: [
            {dataIndex: 'submitterPosition'},
            {dataIndex: 'createTime'},
            {dataIndex: 'constructionPosition'},
            {dataIndex: 'constructionPositionContent'},
            {dataIndex: 'constructionPositionMode'},
            {dataIndex: 'addedBy'},
            {dataIndex: 'contactMethod'},
            {dataIndex: 'constructionStartTime'},
            {dataIndex: 'constructionEndTime'},
            {dataIndex: 'safetyManager'},
            {dataIndex: 'safetyManagerMobile'},
            {dataIndex: 'constructionUnit'},
            {dataIndex: 'constructionManager'},
            {dataIndex: 'constructionManagerTel'},
            {dataIndex: 'constructionWorker'},
            {dataIndex: 'constructionWorkerTel'},
            {dataIndex: 'constructionWorkerIdNo'},
            {dataIndex: 'isControl', enum: 'yes_no'},
            {dataIndex: 'controlPic', link: 'pic'},
            {dataIndex: 'controlPic2', link: 'pic'},
            {dataIndex: 'constructionAroundPic', link: 'pic'},
        ],
    }
    const pm_fire_report_water = {
        columns: [
            {dataIndex: 'submitterPosition'},
            {dataIndex: 'createTime'},
            {dataIndex: 'waterPosition'},
            {dataIndex: 'waterContent'},
            {dataIndex: 'addedBy'},
            {dataIndex: 'contactMethod'},
            {dataIndex: 'waterStarttime'},
            {dataIndex: 'waterEndtime'},
            {dataIndex: 'waterManager'},
            {dataIndex: 'waterManagerTel'},
        ],
    }
    const pm_fire_station = {
        columns: [
            {dataIndex: 'fireStationName'},
            {dataIndex: 'fireStationType', enum: 'station_type'},
            {dataIndex: 'fireStationNo'},
            {dataIndex: 'fireBuildingType', enum: 'fire_building_type'},
            {dataIndex: 'fireStationAddress'},
            {dataIndex: 'fireStationArea'},
            {dataIndex: 'fireStationPersonNum'},
            {dataIndex: 'dutyTelphone'},
            {dataIndex: 'stationPic', link: 'pic'},
            {dataIndex: 'helmet'},
            {dataIndex: 'clothing'},
            {dataIndex: 'boots'},
            {dataIndex: 'visor'},
            {dataIndex: 'interphone'},
            {dataIndex: 'hfireExtinguisher'},
            {dataIndex: 'wfireExtinguisher'},
            {dataIndex: 'hose'},
            {dataIndex: 'waterGun'},
            {dataIndex: 'wrench'},
            {dataIndex: 'electromobile'},
            {dataIndex: 'motorcycle'},
            {dataIndex: 'patrolCar'},
            {dataIndex: 'smallFireEngine'},
            {dataIndex: 'fireEngine'},
        ],
    }
    const pm_fire_control_room = {
        columns: [
            {dataIndex: 'ctrlroomName'},
            {dataIndex: 'department'},
            {dataIndex: 'ctrlroomPersonNum'},
            {dataIndex: 'liablePerson'},
            {dataIndex: 'ctrlroomPic', link: 'pic'},
        ],
        childTables: [
            'pm_fire_control_room_person',
        ]
    }
    const pm_fire_control_room_person = {
        columns: [
            {dataIndex: 'ctrlroomName'},
            {dataIndex: 'employeeName'},
            {dataIndex: 'mobile'},
            {dataIndex: 'jobTitle'},
            {dataIndex: 'department'},
            {dataIndex: 'onBoard', enum: 'on_board'},
        ],
    }
    const pm_fire_perfection = {
        columns: [
            {dataIndex: 'systemName'},
            {dataIndex: 'perfectStatus', enum: 'perfect_status'},
            {dataIndex: 'optionalStatus', enum: 'optional_status'},
            {dataIndex: 'regulationsDoc', link: 'txt'},
            {dataIndex: 'regulationsElec', link: 'txt'},
        ],
    }
    const pm_fire_thing_manager = {
        columns: [
            {dataIndex: 'thingNo'},
            {dataIndex: 'thingName'},
            {dataIndex: 'thingType'},
            {dataIndex: 'thingNum'},
            {dataIndex: 'thingStatus', enum: 'stop_status'},
            {dataIndex: 'thingPosition'},
            {dataIndex: 'thingPic', link: 'pic'},
            {dataIndex: 'isNeedCycleCheck', enum: 'yes_no'},
            {dataIndex: 'checkLiablePerson'},
            {dataIndex: 'checkCycleTime'},
            {dataIndex: 'checkCycleTimeType', enum: 'check_time_type'},
            {dataIndex: 'checkStartDate'},
            {dataIndex: 'checkMethod'},
            {dataIndex: 'checkStandard'},
            {dataIndex: 'isNeedCycleMtn', enum: 'yes_no'},
            {dataIndex: 'mtnLiablePerson'},
            {dataIndex: 'mtnCycleTime'},
            {dataIndex: 'mtnCycleTimeType', enum: 'check_time_type'},
            {dataIndex: 'mtnStartDate'},
            {dataIndex: 'mtnMethod'},
            {dataIndex: 'mtnContent'},
            {dataIndex: 'remark'},
        ],
    }
    const pm_fire_notice = {
        columns: [
            {dataIndex: 'noticeTime'},
            {dataIndex: 'title'},
            {dataIndex: 'content'},
            {dataIndex: 'source'},
        ],
    }

    module.exports = {
        pm_my_work,
        pm_basic_entpr_base_info,
        pm_basic_job,
        pm_basic_certification_company,
        pm_basic_emplyee,
        pm_basic_certification_employee,
        pm_basic_emplyee_transfer,
        pm_performance_report,
        pm_basic_produce_unit_area,
        pm_basic_device_container,
        pm_basic_area_tank,
        pm_device_tank,
        pm_basic_area_warehouse,
        pm_basic_warehouse,
        pm_basic_material_raw,
        pm_basic_material_component,
        pm_basic_material_product,
        pm_basic_chemical,
        pm_basic_chemical_msds,
        pm_basic_chemical_tag,
        pm_basic_chemical_inv,
        pm_basic_chemical_inv_record,
        js_chemical_sds,
        js_lab_chemical_check,
        js_chemical_safety_label,
        js_danger_chemical_record,
        js_waste_chemical_handle,
        pm_basic_mh_ident1,
        pm_basic_mh_ident2,
        pm_file_list,
        pm_basic_building,
        pm_basic_building_fire_facility,
        pm_basic_vehicle,
        pm_safety_assess_report,
        pm_project_three_sim,
        pm_basic_shop_floor,
        pm_basic_group,
        pm_basic_work_title,
        pm_equipment_port,
        pm_basic_entpr_envr_info,
        pm_basic_public_construction,
        pm_target_index,
        pm_target_assign,
        pm_target_assign_detail,
        pm_target_report,
        pm_target_report_detail,
        pm_target_check,
        pm_target_check_detail,
        pm_safety_produce_manage_net,
        pm_safety_produce_duty,
        pm_safety_produce_duty_appraise,
        pm_safety_promise,
        pm_employee_on_watch,
        pm_employee_on_duty,
        pm_leader_duty_shift,
        pm_leader_appraise,
        pm_operator_shift,
        pm_safety_cost_input,
        pm_safety_cost,
        pm_safety_produce_cost,
        pm_safety_dynmic,
        pm_safety_suggestion,
        pm_safety_activity_record,
        pm_safety_meeting_record,
        pm_leader_safety_activity,
        pm_rule_law,
        pm_rule_law_department,
        pm_rule_law_safety,
        pm_rule_law_safety_detail,
        pm_safety_rule,
        pm_safety_rule_op,
        pm_safety_rule_work,
        pm_basic_announcement,
        pm_menu_resource,
        exm_training_course,
        exm_training_material,
        exm_training_course_question,
        exm_training_plan,
        exm_training_activity,
        exm_training_activity_course,
        exm_training_person,
        exm_practice_question,
        exm_question,
        exm_paper,
        exm_major_exam,
        exm_period_exam,
        exm_period_examinee,
        exm_paper_question,
        exm_paper_examinee,
        exm_paper_question_examinee,
        exm_study_summary,
        exm_study_training,
        exm_study_training_time,
        exm_examine_summary,
        exm_examine_subject_summary,
        exm_safety_training_assess,
        js_check_examine_upload,
        pm_tech_linked_lock,
        pm_tech_linked_remove,
        pm_tech_linked_add,
        pm_tech_linked_lock_check,
        pm_tech_linked_lock_check_content,
        pm_tech_linked_lock_exception,
        pm_tech_routing,
        pm_tech_routing_op,
        pm_site_contractor,
        pm_site_contractor_assess,
        pm_site_contractor_work,
        pm_site_contractor_break_rule,
        pm_site_contractor_certification,
        pm_site_contractor_worker,
        pm_site_contractor_worker_certification,
        pm_contractor_work_rule_audit,
        pm_contractor_work_emergency_audit,
        pm_site_supplier,
        pm_site_supplier_assess,
        pm_site_supplier_certification,
        pm_safety_work_fire,
        pm_safety_work_upper_air,
        pm_safety_work_hoisting,
        pm_safety_work_limit_space,
        pm_safety_work_temporary_electricity,
        pm_safety_work_break_ground,
        pm_safety_work_block_dredge,
        pm_safety_work_block_road,
        pm_safety_work_check_template,
        pm_safety_work_check_template_detail,
        pm_safety_work_check_content,
        pm_safety_work_check_content_detail,
        pm_safety_measure,
        pm_safety_work_jsa_measure,
        pm_safety_work_jsa_apply,
        pm_safety_work_jsa_apply_detail,
        pm_safety_work_cert_person,
        pm_safety_work_chemical,
        pm_safety_work_measure,
        js_safety_work_key_job,
        js_safety_work_step_list,
        js_safety_work_guardian,
        pm_safety_work_warning_sign,
        pm_safety_material,
        pm_career_health_good_standard,
        pm_career_health_good_std_detail,
        pm_career_health_good_std_user_detail,
        pm_demand_plan_labour_protect,
        pm_demand_plan_labour_protect_detail,
        pm_career_health_attention,
        pm_career_health_report,
        pm_career_health_dis_report,
        pm_career_health_check,
        pm_change_request,
        pm_change_acceptance,
        pm_emergency_plan,
        pm_emergency_plan_active,
        pm_emergency_plan_record,
        pm_emergency_practice,
        pm_emergency_assess,
        pm_emergency_material,
        pm_emergency_material_check_std,
        pm_emergency_material_check_std_content,
        pm_emergency_material_check_plan,
        pm_emergency_material_check_record,
        pm_emergency_material_check_record_detail,
        pm_emergency_team,
        pm_emergency_team_member,
        pm_accident_snapshot,
        pm_accident_report,
        pm_accident_work_injury,
        pm_mhm_access_device,
        pm_mhm_data_collection_device,
        pm_tech_device_alert,
        pm_basic_major_hazard,
        pm_basic_major_hazard_chem,
        pm_mhm_realtime_data,
        pm_mhm_realtime_data_summary,
        pm_mhm_realtime_data_backup,
        pm_video_config,
        pm_tech_device_alert_info,
        pm_tech_device_alert_info_snapshot,
        pm_second_door_detail,
        pm_second_door_count,
        pm_risk_judge_group,
        pm_risk_judge_shop_floor,
        pm_risk_judge_shop_floor_group,
        pm_risk_judge_shop_floor_detail,
        pm_risk_judge_company,
        pm_risk_judge_company_shop_floor,
        pm_risk_judge_report,
        pm_work_push_team,
        pm_basic_area,
        pm_risk_point,
        pm_risk_point_assess,
        pm_risk_point_assess_scl,
        pm_risk_point_assess_jha,
        pm_risk_point_assess_hazop,
        pm_risk_analyse_obj,
        pm_risk_analyse_unit,
        pm_risk_analyse_event,
        pm_risk_analyse_measure,
        pm_risk_list_two_control,
        pm_risk_list_two_ident,
        pm_risk_card_three_know,
        pm_risk_card_three_promise,
        pm_risk_card_three_handle,
        pm_hidden_hazard_check_std,
        pm_hidden_hazard_check_std_content,
        pm_hidden_hazard_check_plan,
        pm_hidden_hazard_check_plan_detail,
        pm_hidden_hazard_check_list,
        pm_hidden_hazard_check_list_detail,
        js_expert_check_upload,
        js_expert_check_plan,
        js_expert_check_record,
        pm_hidden_hazard,
        pm_hidden_hazard_request,
        pm_hidden_hazard_rectify,
        pm_hidden_hazard_rectify_verify,
        pm_dp_assess_template,
        pm_dp_assess_template_detail,
        pm_dp_assess_record,
        pm_dp_assess_record_detail,
        pm_dp_reward_std,
        pm_dp_reward_record,
        pm_dp_punish_std,
        pm_dp_punish_record,
        pm_basic_device,
        pm_device_check_std,
        pm_device_check_record,
        pm_device_mtn_std,
        pm_device_mtn_record,
        pm_device_test_std,
        pm_device_test_record,
        pm_device_repair_record,
        pm_device_stop_record,
        pm_device_restore_record,
        pm_device_scrap_record,
        pm_device_fix_plan,
        pm_device_fix_five,
        pm_device_fix_project,
        pm_device_fix_deliver,
        pm_device_key_part,
        pm_device_pipeline,
        pm_device_special_valve,
        pm_device_special_device,
        pm_device_instrument_lab,
        pm_device_monitor_measure,
        pm_device_container_emergency,
        pm_produce_stop_plan,
        pm_device_special_run,
        pm_device_special_issue,
        pm_device_clean,
        pm_fire_manager,
        pm_fire_important_position,
        pm_fire_unit_info,
        pm_fire_mark,
        pm_fire_check,
        pm_fire_mtn,
        pm_fire_drill,
        pm_fire_drill_person,
        pm_fire_report_fire,
        pm_fire_report_construction,
        pm_fire_report_water,
        pm_fire_station,
        pm_fire_control_room,
        pm_fire_control_room_person,
        pm_fire_perfection,
        pm_fire_thing_manager,
        pm_fire_notice,
    }
